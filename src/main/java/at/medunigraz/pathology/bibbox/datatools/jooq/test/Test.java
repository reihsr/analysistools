/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.test;


import at.medunigraz.pathology.bibbox.datatools.jooq.DefaultCatalog;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.CodeIcd10;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Donor;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.EventType;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEvent;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEventCodeIcd10Link;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEventTnmStagingLink;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Provider;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Sample;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.SampleCodeIcd10Link;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.SampleTnmStagingLink;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.TnmStaging;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.User;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Test extends SchemaImpl {

    private static final long serialVersionUID = 1463833942;

    /**
     * The reference instance of <code>test</code>
     */
    public static final Test TEST = new Test();

    /**
     * The table <code>test.code_icd10</code>.
     */
    public final CodeIcd10 CODE_ICD10 = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.CodeIcd10.CODE_ICD10;

    /**
     * The table <code>test.donor</code>.
     */
    public final Donor DONOR = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Donor.DONOR;

    /**
     * The table <code>test.event_type</code>.
     */
    public final EventType EVENT_TYPE = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.EventType.EVENT_TYPE;

    /**
     * The table <code>test.medical_event</code>.
     */
    public final MedicalEvent MEDICAL_EVENT = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEvent.MEDICAL_EVENT;

    /**
     * The table <code>test.medical_event_code_icd10_link</code>.
     */
    public final MedicalEventCodeIcd10Link MEDICAL_EVENT_CODE_ICD10_LINK = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEventCodeIcd10Link.MEDICAL_EVENT_CODE_ICD10_LINK;

    /**
     * The table <code>test.medical_event_tnm_staging_link</code>.
     */
    public final MedicalEventTnmStagingLink MEDICAL_EVENT_TNM_STAGING_LINK = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEventTnmStagingLink.MEDICAL_EVENT_TNM_STAGING_LINK;

    /**
     * The table <code>test.provider</code>.
     */
    public final Provider PROVIDER = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Provider.PROVIDER;

    /**
     * The table <code>test.sample</code>.
     */
    public final Sample SAMPLE = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Sample.SAMPLE;

    /**
     * The table <code>test.sample_code_icd10_link</code>.
     */
    public final SampleCodeIcd10Link SAMPLE_CODE_ICD10_LINK = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.SampleCodeIcd10Link.SAMPLE_CODE_ICD10_LINK;

    /**
     * The table <code>test.sample_tnm_staging_link</code>.
     */
    public final SampleTnmStagingLink SAMPLE_TNM_STAGING_LINK = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.SampleTnmStagingLink.SAMPLE_TNM_STAGING_LINK;

    /**
     * The table <code>test.tnm_staging</code>.
     */
    public final TnmStaging TNM_STAGING = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.TnmStaging.TNM_STAGING;

    /**
     * The table <code>test.user</code>.
     */
    public final User USER = at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.User.USER;

    /**
     * No further instances allowed
     */
    private Test() {
        super("test", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.DONOR_DONER_ID_SEQ,
            Sequences.EVENT_TYPE_EVENT_TYPE_ID_SEQ,
            Sequences.MEDICAL_EVENT_CODE_ICD10_LINK_MEDICAL_EVENT_CODE_ICD10_LINK_SEQ,
            Sequences.MEDICAL_EVENT_MEDICAL_EVENT_ID_SEQ,
            Sequences.MEDICAL_EVENT_TNM_STAGING_LIN_MEDICAL_EVENT_TNM_STAGING_LIN_SEQ,
            Sequences.PROVIDER_PROVIDER_ID_SEQ,
            Sequences.SAMPLE_CODE_ICD10_LINK_SAMPLE_CODE_ICD10_LINK_ID_SEQ,
            Sequences.SAMPLE_SAMPLE_ID_SEQ,
            Sequences.SAMPLE_TNM_STAGING_LINK_SAMPLE_TNM_STAGING_LINK_ID_SEQ,
            Sequences.TNM_STAGING_TNM_ID_SEQ,
            Sequences.USER_USER_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            CodeIcd10.CODE_ICD10,
            Donor.DONOR,
            EventType.EVENT_TYPE,
            MedicalEvent.MEDICAL_EVENT,
            MedicalEventCodeIcd10Link.MEDICAL_EVENT_CODE_ICD10_LINK,
            MedicalEventTnmStagingLink.MEDICAL_EVENT_TNM_STAGING_LINK,
            Provider.PROVIDER,
            Sample.SAMPLE,
            SampleCodeIcd10Link.SAMPLE_CODE_ICD10_LINK,
            SampleTnmStagingLink.SAMPLE_TNM_STAGING_LINK,
            TnmStaging.TNM_STAGING,
            User.USER);
    }
}
