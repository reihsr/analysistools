/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat;


import at.medunigraz.pathology.bibbox.datatools.jooq.DefaultCatalog;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsPhrase;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsSentence;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsStructure;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsToken;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsTokenMap;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatientRepositorySaat extends SchemaImpl {

    private static final long serialVersionUID = 1215495267;

    /**
     * The reference instance of <code>patient_repository_saat</code>
     */
    public static final PatientRepositorySaat PATIENT_REPOSITORY_SAAT = new PatientRepositorySaat();

    /**
     * The table <code>patient_repository_saat.findings_phrase</code>.
     */
    public final FindingsPhrase FINDINGS_PHRASE = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsPhrase.FINDINGS_PHRASE;

    /**
     * The table <code>patient_repository_saat.findings_sentence</code>.
     */
    public final FindingsSentence FINDINGS_SENTENCE = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsSentence.FINDINGS_SENTENCE;

    /**
     * The table <code>patient_repository_saat.findings_structure</code>.
     */
    public final FindingsStructure FINDINGS_STRUCTURE = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsStructure.FINDINGS_STRUCTURE;

    /**
     * The table <code>patient_repository_saat.findings_token</code>.
     */
    public final FindingsToken FINDINGS_TOKEN = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsToken.FINDINGS_TOKEN;

    /**
     * The table <code>patient_repository_saat.findings_token_map</code>.
     */
    public final FindingsTokenMap FINDINGS_TOKEN_MAP = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.FindingsTokenMap.FINDINGS_TOKEN_MAP;

    /**
     * No further instances allowed
     */
    private PatientRepositorySaat() {
        super("patient_repository_saat", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.FINDINGS_PHRASE_FINDINGS_PHRASE_ID_SEQ,
            Sequences.FINDINGS_SENTENCE_FINDINGS_SENTENCE_ID_SEQ,
            Sequences.FINDINGS_STRUCTURE_FINDINGS_STRUCTURE_ID_SEQ,
            Sequences.FINDINGS_TOKEN_FINDINGS_TOKEN_ID_SEQ,
            Sequences.FINDINGS_TOKEN_MAP_FINDINGS_TOKEN_MAP_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            FindingsPhrase.FINDINGS_PHRASE,
            FindingsSentence.FINDINGS_SENTENCE,
            FindingsStructure.FINDINGS_STRUCTURE,
            FindingsToken.FINDINGS_TOKEN,
            FindingsTokenMap.FINDINGS_TOKEN_MAP);
    }
}
