/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.prostate_cv.tables.records;


import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_cv.tables.DiagnosisSelection;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiagnosisSelectionRecord extends UpdatableRecordImpl<DiagnosisSelectionRecord> implements Record13<Integer, String, String, Long, String, String, Double, Double, String, String, String, String, Integer> {

    private static final long serialVersionUID = 143639417;

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.patient_id</code>.
     */
    public void setPatientId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.patient_id</code>.
     */
    public String getPatientId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.histo</code>.
     */
    public void setHisto(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.histo</code>.
     */
    public String getHisto() {
        return (String) get(2);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.count</code>.
     */
    public void setCount(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.count</code>.
     */
    public Long getCount() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.gleason</code>.
     */
    public void setGleason(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.gleason</code>.
     */
    public String getGleason() {
        return (String) get(4);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.dates</code>.
     */
    public void setDates(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.dates</code>.
     */
    public String getDates() {
        return (String) get(5);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.year_of_examination</code>.
     */
    public void setYearOfExamination(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.year_of_examination</code>.
     */
    public Double getYearOfExamination() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.month_of_examination</code>.
     */
    public void setMonthOfExamination(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.month_of_examination</code>.
     */
    public Double getMonthOfExamination() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.diagnosis</code>.
     */
    public void setDiagnosis(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.diagnosis</code>.
     */
    public String getDiagnosis() {
        return (String) get(8);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.examination_type</code>.
     */
    public void setExaminationType(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.examination_type</code>.
     */
    public String getExaminationType() {
        return (String) get(9);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.part</code>.
     */
    public void setPart(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.part</code>.
     */
    public String getPart() {
        return (String) get(10);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.selected_histonumber</code>.
     */
    public void setSelectedHistonumber(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.selected_histonumber</code>.
     */
    public String getSelectedHistonumber() {
        return (String) get(11);
    }

    /**
     * Setter for <code>prostate_cv.diagnosis_selection.tablekey</code>.
     */
    public void setTablekey(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>prostate_cv.diagnosis_selection.tablekey</code>.
     */
    public Integer getTablekey() {
        return (Integer) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, String, Long, String, String, Double, Double, String, String, String, String, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, String, String, Long, String, String, Double, Double, String, String, String, String, Integer> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.PATIENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.HISTO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.GLEASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.DATES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.YEAR_OF_EXAMINATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.MONTH_OF_EXAMINATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.DIAGNOSIS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.EXAMINATION_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.PART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.SELECTED_HISTONUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return DiagnosisSelection.DIAGNOSIS_SELECTION.TABLEKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPatientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getHisto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getGleason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDates();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getYearOfExamination();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getMonthOfExamination();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getDiagnosis();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getExaminationType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component11() {
        return getPart();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component12() {
        return getSelectedHistonumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getTablekey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPatientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getHisto();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getGleason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDates();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getYearOfExamination();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getMonthOfExamination();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getDiagnosis();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getExaminationType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getPart();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getSelectedHistonumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getTablekey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value2(String value) {
        setPatientId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value3(String value) {
        setHisto(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value4(Long value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value5(String value) {
        setGleason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value6(String value) {
        setDates(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value7(Double value) {
        setYearOfExamination(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value8(Double value) {
        setMonthOfExamination(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value9(String value) {
        setDiagnosis(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value10(String value) {
        setExaminationType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value11(String value) {
        setPart(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value12(String value) {
        setSelectedHistonumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord value13(Integer value) {
        setTablekey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiagnosisSelectionRecord values(Integer value1, String value2, String value3, Long value4, String value5, String value6, Double value7, Double value8, String value9, String value10, String value11, String value12, Integer value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DiagnosisSelectionRecord
     */
    public DiagnosisSelectionRecord() {
        super(DiagnosisSelection.DIAGNOSIS_SELECTION);
    }

    /**
     * Create a detached, initialised DiagnosisSelectionRecord
     */
    public DiagnosisSelectionRecord(Integer id, String patientId, String histo, Long count, String gleason, String dates, Double yearOfExamination, Double monthOfExamination, String diagnosis, String examinationType, String part, String selectedHistonumber, Integer tablekey) {
        super(DiagnosisSelection.DIAGNOSIS_SELECTION);

        set(0, id);
        set(1, patientId);
        set(2, histo);
        set(3, count);
        set(4, gleason);
        set(5, dates);
        set(6, yearOfExamination);
        set(7, monthOfExamination);
        set(8, diagnosis);
        set(9, examinationType);
        set(10, part);
        set(11, selectedHistonumber);
        set(12, tablekey);
    }
}
