/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.Indexes;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.Keys;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.ProstateSaat;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.tables.records.XmlReportBefunddatenGleasonRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XmlReportBefunddatenGleason extends TableImpl<XmlReportBefunddatenGleasonRecord> {

    private static final long serialVersionUID = 157150026;

    /**
     * The reference instance of <code>prostate_saat.xml_report_befunddaten_gleason</code>
     */
    public static final XmlReportBefunddatenGleason XML_REPORT_BEFUNDDATEN_GLEASON = new XmlReportBefunddatenGleason();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<XmlReportBefunddatenGleasonRecord> getRecordType() {
        return XmlReportBefunddatenGleasonRecord.class;
    }

    /**
     * The column <code>prostate_saat.xml_report_befunddaten_gleason.xml_report_befunddaten_gleason_id</code>.
     */
    public final TableField<XmlReportBefunddatenGleasonRecord, Integer> XML_REPORT_BEFUNDDATEN_GLEASON_ID = createField("xml_report_befunddaten_gleason_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('prostate_saat.xml_report_befunddaten_gleaso_xml_report_befunddaten_gleaso_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>prostate_saat.xml_report_befunddaten_gleason.xml_report_befunddaten_id</code>.
     */
    public final TableField<XmlReportBefunddatenGleasonRecord, Integer> XML_REPORT_BEFUNDDATEN_ID = createField("xml_report_befunddaten_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate_saat.xml_report_befunddaten_gleason.gleason_score</code>.
     */
    public final TableField<XmlReportBefunddatenGleasonRecord, String> GLEASON_SCORE = createField("gleason_score", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_saat.xml_report_befunddaten_gleason.score_count</code>.
     */
    public final TableField<XmlReportBefunddatenGleasonRecord, Integer> SCORE_COUNT = createField("score_count", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate_saat.xml_report_befunddaten_gleason.slide_id</code>.
     */
    public final TableField<XmlReportBefunddatenGleasonRecord, String> SLIDE_ID = createField("slide_id", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_saat.xml_report_befunddaten_gleason.selected</code>.
     */
    public final TableField<XmlReportBefunddatenGleasonRecord, Boolean> SELECTED = createField("selected", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>prostate_saat.xml_report_befunddaten_gleason</code> table reference
     */
    public XmlReportBefunddatenGleason() {
        this(DSL.name("xml_report_befunddaten_gleason"), null);
    }

    /**
     * Create an aliased <code>prostate_saat.xml_report_befunddaten_gleason</code> table reference
     */
    public XmlReportBefunddatenGleason(String alias) {
        this(DSL.name(alias), XML_REPORT_BEFUNDDATEN_GLEASON);
    }

    /**
     * Create an aliased <code>prostate_saat.xml_report_befunddaten_gleason</code> table reference
     */
    public XmlReportBefunddatenGleason(Name alias) {
        this(alias, XML_REPORT_BEFUNDDATEN_GLEASON);
    }

    private XmlReportBefunddatenGleason(Name alias, Table<XmlReportBefunddatenGleasonRecord> aliased) {
        this(alias, aliased, null);
    }

    private XmlReportBefunddatenGleason(Name alias, Table<XmlReportBefunddatenGleasonRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> XmlReportBefunddatenGleason(Table<O> child, ForeignKey<O, XmlReportBefunddatenGleasonRecord> key) {
        super(child, key, XML_REPORT_BEFUNDDATEN_GLEASON);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ProstateSaat.PROSTATE_SAAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XML_REPORT_BEFUNDDATEN_GLEASON_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<XmlReportBefunddatenGleasonRecord, Integer> getIdentity() {
        return Keys.IDENTITY_XML_REPORT_BEFUNDDATEN_GLEASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<XmlReportBefunddatenGleasonRecord> getPrimaryKey() {
        return Keys.XML_REPORT_BEFUNDDATEN_GLEASON_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<XmlReportBefunddatenGleasonRecord>> getKeys() {
        return Arrays.<UniqueKey<XmlReportBefunddatenGleasonRecord>>asList(Keys.XML_REPORT_BEFUNDDATEN_GLEASON_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XmlReportBefunddatenGleason as(String alias) {
        return new XmlReportBefunddatenGleason(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XmlReportBefunddatenGleason as(Name alias) {
        return new XmlReportBefunddatenGleason(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public XmlReportBefunddatenGleason rename(String name) {
        return new XmlReportBefunddatenGleason(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public XmlReportBefunddatenGleason rename(Name name) {
        return new XmlReportBefunddatenGleason(name, null);
    }
}
