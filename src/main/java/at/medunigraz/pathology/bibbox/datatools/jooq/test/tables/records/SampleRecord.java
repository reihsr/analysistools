/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records;


import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Sample;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SampleRecord extends UpdatableRecordImpl<SampleRecord> implements Record6<Integer, String, String, Integer, String, Integer> {

    private static final long serialVersionUID = -1651417647;

    /**
     * Setter for <code>test.sample.sample_id</code>.
     */
    public void setSampleId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.sample.sample_id</code>.
     */
    public Integer getSampleId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.sample.sample_class</code>.
     */
    public void setSampleClass(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.sample.sample_class</code>.
     */
    public String getSampleClass() {
        return (String) get(1);
    }

    /**
     * Setter for <code>test.sample.sample_type</code>.
     */
    public void setSampleType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.sample.sample_type</code>.
     */
    public String getSampleType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>test.sample.sample_quantity</code>.
     */
    public void setSampleQuantity(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.sample.sample_quantity</code>.
     */
    public Integer getSampleQuantity() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>test.sample.sample_quantity_unit</code>.
     */
    public void setSampleQuantityUnit(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.sample.sample_quantity_unit</code>.
     */
    public String getSampleQuantityUnit() {
        return (String) get(4);
    }

    /**
     * Setter for <code>test.sample.parent_specimen</code>.
     */
    public void setParentSpecimen(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.sample.parent_specimen</code>.
     */
    public Integer getParentSpecimen() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, Integer, String, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, Integer, String, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Sample.SAMPLE.SAMPLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Sample.SAMPLE.SAMPLE_CLASS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Sample.SAMPLE.SAMPLE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Sample.SAMPLE.SAMPLE_QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Sample.SAMPLE.SAMPLE_QUANTITY_UNIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Sample.SAMPLE.PARENT_SPECIMEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getSampleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSampleClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getSampleType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getSampleQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSampleQuantityUnit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getParentSpecimen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSampleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSampleClass();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getSampleType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getSampleQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSampleQuantityUnit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getParentSpecimen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleRecord value1(Integer value) {
        setSampleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleRecord value2(String value) {
        setSampleClass(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleRecord value3(String value) {
        setSampleType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleRecord value4(Integer value) {
        setSampleQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleRecord value5(String value) {
        setSampleQuantityUnit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleRecord value6(Integer value) {
        setParentSpecimen(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SampleRecord values(Integer value1, String value2, String value3, Integer value4, String value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SampleRecord
     */
    public SampleRecord() {
        super(Sample.SAMPLE);
    }

    /**
     * Create a detached, initialised SampleRecord
     */
    public SampleRecord(Integer sampleId, String sampleClass, String sampleType, Integer sampleQuantity, String sampleQuantityUnit, Integer parentSpecimen) {
        super(Sample.SAMPLE);

        set(0, sampleId);
        set(1, sampleClass);
        set(2, sampleType);
        set(3, sampleQuantity);
        set(4, sampleQuantityUnit);
        set(5, parentSpecimen);
    }
}
