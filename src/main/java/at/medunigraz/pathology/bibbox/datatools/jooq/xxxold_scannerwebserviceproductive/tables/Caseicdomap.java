/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.XxxoldScannerwebserviceproductive;
import at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.tables.records.CaseicdomapRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Caseicdomap extends TableImpl<CaseicdomapRecord> {

    private static final long serialVersionUID = 785327273;

    /**
     * The reference instance of <code>xxxold_scannerwebserviceproductive.caseicdomap</code>
     */
    public static final Caseicdomap CASEICDOMAP = new Caseicdomap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CaseicdomapRecord> getRecordType() {
        return CaseicdomapRecord.class;
    }

    /**
     * The column <code>xxxold_scannerwebserviceproductive.caseicdomap.vhistonumberid_fk</code>.
     */
    public final TableField<CaseicdomapRecord, Long> VHISTONUMBERID_FK = createField("vhistonumberid_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>xxxold_scannerwebserviceproductive.caseicdomap.icdoid_fk</code>.
     */
    public final TableField<CaseicdomapRecord, Integer> ICDOID_FK = createField("icdoid_fk", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>xxxold_scannerwebserviceproductive.caseicdomap</code> table reference
     */
    public Caseicdomap() {
        this(DSL.name("caseicdomap"), null);
    }

    /**
     * Create an aliased <code>xxxold_scannerwebserviceproductive.caseicdomap</code> table reference
     */
    public Caseicdomap(String alias) {
        this(DSL.name(alias), CASEICDOMAP);
    }

    /**
     * Create an aliased <code>xxxold_scannerwebserviceproductive.caseicdomap</code> table reference
     */
    public Caseicdomap(Name alias) {
        this(alias, CASEICDOMAP);
    }

    private Caseicdomap(Name alias, Table<CaseicdomapRecord> aliased) {
        this(alias, aliased, null);
    }

    private Caseicdomap(Name alias, Table<CaseicdomapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Caseicdomap(Table<O> child, ForeignKey<O, CaseicdomapRecord> key) {
        super(child, key, CASEICDOMAP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return XxxoldScannerwebserviceproductive.XXXOLD_SCANNERWEBSERVICEPRODUCTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Caseicdomap as(String alias) {
        return new Caseicdomap(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Caseicdomap as(Name alias) {
        return new Caseicdomap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Caseicdomap rename(String name) {
        return new Caseicdomap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Caseicdomap rename(Name name) {
        return new Caseicdomap(name, null);
    }
}
