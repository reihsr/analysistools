/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.tables.records;


import at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.tables.Rackstatustable;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RackstatustableRecord extends UpdatableRecordImpl<RackstatustableRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 530998266;

    /**
     * Setter for <code>xxx20200705_scannerwebserviceproductive.rackstatustable.rackstatusid</code>.
     */
    public void setRackstatusid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>xxx20200705_scannerwebserviceproductive.rackstatustable.rackstatusid</code>.
     */
    public Integer getRackstatusid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>xxx20200705_scannerwebserviceproductive.rackstatustable.rackstatusname</code>.
     */
    public void setRackstatusname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>xxx20200705_scannerwebserviceproductive.rackstatustable.rackstatusname</code>.
     */
    public String getRackstatusname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>xxx20200705_scannerwebserviceproductive.rackstatustable.rackstatusorder</code>.
     */
    public void setRackstatusorder(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>xxx20200705_scannerwebserviceproductive.rackstatustable.rackstatusorder</code>.
     */
    public String getRackstatusorder() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Rackstatustable.RACKSTATUSTABLE.RACKSTATUSID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Rackstatustable.RACKSTATUSTABLE.RACKSTATUSNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Rackstatustable.RACKSTATUSTABLE.RACKSTATUSORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getRackstatusid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRackstatusname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRackstatusorder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRackstatusid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRackstatusname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRackstatusorder();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RackstatustableRecord value1(Integer value) {
        setRackstatusid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RackstatustableRecord value2(String value) {
        setRackstatusname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RackstatustableRecord value3(String value) {
        setRackstatusorder(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RackstatustableRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RackstatustableRecord
     */
    public RackstatustableRecord() {
        super(Rackstatustable.RACKSTATUSTABLE);
    }

    /**
     * Create a detached, initialised RackstatustableRecord
     */
    public RackstatustableRecord(Integer rackstatusid, String rackstatusname, String rackstatusorder) {
        super(Rackstatustable.RACKSTATUSTABLE);

        set(0, rackstatusid);
        set(1, rackstatusname);
        set(2, rackstatusorder);
    }
}
