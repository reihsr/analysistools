/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.prostate_google.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_google.ProstateGoogle;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_google.tables.records.RandomCasesRecord;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RandomCases extends TableImpl<RandomCasesRecord> {

    private static final long serialVersionUID = 283233748;

    /**
     * The reference instance of <code>prostate_google.random_cases</code>
     */
    public static final RandomCases RANDOM_CASES = new RandomCases();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RandomCasesRecord> getRecordType() {
        return RandomCasesRecord.class;
    }

    /**
     * The column <code>prostate_google.random_cases.vhistonumberid</code>.
     */
    public final TableField<RandomCasesRecord, Long> VHISTONUMBERID = createField("vhistonumberid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>prostate_google.random_cases.gewinnungsart</code>.
     */
    public final TableField<RandomCasesRecord, String> GEWINNUNGSART = createField("gewinnungsart", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_google.random_cases.eingangsdatum</code>.
     */
    public final TableField<RandomCasesRecord, Date> EINGANGSDATUM = createField("eingangsdatum", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>prostate_google.random_cases.material</code>.
     */
    public final TableField<RandomCasesRecord, String> MATERIAL = createField("material", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_google.random_cases.materialzusatz</code>.
     */
    public final TableField<RandomCasesRecord, String> MATERIALZUSATZ = createField("materialzusatz", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_google.random_cases.t</code>.
     */
    public final TableField<RandomCasesRecord, String> T = createField("t", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>prostate_google.random_cases.n</code>.
     */
    public final TableField<RandomCasesRecord, String> N = createField("n", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>prostate_google.random_cases.age</code>.
     */
    public final TableField<RandomCasesRecord, Short> AGE = createField("age", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>prostate_google.random_cases.survivalindays</code>.
     */
    public final TableField<RandomCasesRecord, Integer> SURVIVALINDAYS = createField("survivalindays", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate_google.random_cases.status</code>.
     */
    public final TableField<RandomCasesRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate_google.random_cases.stage</code>.
     */
    public final TableField<RandomCasesRecord, String> STAGE = createField("stage", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>prostate_google.random_cases.diagnose</code>.
     */
    public final TableField<RandomCasesRecord, String> DIAGNOSE = createField("diagnose", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_google.random_cases.makroskopiebeschreibung</code>.
     */
    public final TableField<RandomCasesRecord, String> MAKROSKOPIEBESCHREIBUNG = createField("makroskopiebeschreibung", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_google.random_cases.histologiebeschreibung</code>.
     */
    public final TableField<RandomCasesRecord, String> HISTOLOGIEBESCHREIBUNG = createField("histologiebeschreibung", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_google.random_cases.mikroskopiebeschreibung</code>.
     */
    public final TableField<RandomCasesRecord, String> MIKROSKOPIEBESCHREIBUNG = createField("mikroskopiebeschreibung", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_google.random_cases.mpbeschreibung</code>.
     */
    public final TableField<RandomCasesRecord, String> MPBESCHREIBUNG = createField("mpbeschreibung", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_google.random_cases.schnellschnittdiagnose</code>.
     */
    public final TableField<RandomCasesRecord, String> SCHNELLSCHNITTDIAGNOSE = createField("schnellschnittdiagnose", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate_google.random_cases.mpdiagnose</code>.
     */
    public final TableField<RandomCasesRecord, String> MPDIAGNOSE = createField("mpdiagnose", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>prostate_google.random_cases</code> table reference
     */
    public RandomCases() {
        this(DSL.name("random_cases"), null);
    }

    /**
     * Create an aliased <code>prostate_google.random_cases</code> table reference
     */
    public RandomCases(String alias) {
        this(DSL.name(alias), RANDOM_CASES);
    }

    /**
     * Create an aliased <code>prostate_google.random_cases</code> table reference
     */
    public RandomCases(Name alias) {
        this(alias, RANDOM_CASES);
    }

    private RandomCases(Name alias, Table<RandomCasesRecord> aliased) {
        this(alias, aliased, null);
    }

    private RandomCases(Name alias, Table<RandomCasesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RandomCases(Table<O> child, ForeignKey<O, RandomCasesRecord> key) {
        super(child, key, RANDOM_CASES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ProstateGoogle.PROSTATE_GOOGLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RandomCases as(String alias) {
        return new RandomCases(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RandomCases as(Name alias) {
        return new RandomCases(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RandomCases rename(String name) {
        return new RandomCases(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RandomCases rename(Name name) {
        return new RandomCases(name, null);
    }
}
