/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.prostate.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.prostate.Indexes;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate.Keys;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate.Prostate;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate.tables.records.XmlReportKloezelRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XmlReportKloezel extends TableImpl<XmlReportKloezelRecord> {

    private static final long serialVersionUID = -1870622682;

    /**
     * The reference instance of <code>prostate.xml_report_kloezel</code>
     */
    public static final XmlReportKloezel XML_REPORT_KLOEZEL = new XmlReportKloezel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<XmlReportKloezelRecord> getRecordType() {
        return XmlReportKloezelRecord.class;
    }

    /**
     * The column <code>prostate.xml_report_kloezel.id</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('prostate.xml_report_kloezel_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.BEFUNDLFDNR1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> BEFUNDLFDNR1 = createField("BEFUNDLFDNR1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.TYP1</code>.
     */
    public final TableField<XmlReportKloezelRecord, String> TYP1 = createField("TYP1", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.KUERZEL1</code>.
     */
    public final TableField<XmlReportKloezelRecord, String> KUERZEL1 = createField("KUERZEL1", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.TEXT1</code>.
     */
    public final TableField<XmlReportKloezelRecord, String> TEXT1 = createField("TEXT1", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.INFO1</code>.
     */
    public final TableField<XmlReportKloezelRecord, String> INFO1 = createField("INFO1", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.ANZAHL1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> ANZAHL1 = createField("ANZAHL1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.STUECKANZAHL1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> STUECKANZAHL1 = createField("STUECKANZAHL1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.STATUS1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> STATUS1 = createField("STATUS1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.SORT1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> SORT1 = createField("SORT1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.FARBE1</code>.
     */
    public final TableField<XmlReportKloezelRecord, String> FARBE1 = createField("FARBE1", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.DATUM1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Date> DATUM1 = createField("DATUM1", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.TAG1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> TAG1 = createField("TAG1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.OID1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> OID1 = createField("OID1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.BID1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> BID1 = createField("BID1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.BENUTZER1</code>.
     */
    public final TableField<XmlReportKloezelRecord, String> BENUTZER1 = createField("BENUTZER1", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.ORGEINHEIT1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Integer> ORGEINHEIT1 = createField("ORGEINHEIT1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.VPATID1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Long> VPATID1 = createField("VPATID1", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.VHISTID1</code>.
     */
    public final TableField<XmlReportKloezelRecord, Long> VHISTID1 = createField("VHISTID1", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>prostate.xml_report_kloezel.file</code>.
     */
    public final TableField<XmlReportKloezelRecord, String> FILE = createField("file", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>prostate.xml_report_kloezel</code> table reference
     */
    public XmlReportKloezel() {
        this(DSL.name("xml_report_kloezel"), null);
    }

    /**
     * Create an aliased <code>prostate.xml_report_kloezel</code> table reference
     */
    public XmlReportKloezel(String alias) {
        this(DSL.name(alias), XML_REPORT_KLOEZEL);
    }

    /**
     * Create an aliased <code>prostate.xml_report_kloezel</code> table reference
     */
    public XmlReportKloezel(Name alias) {
        this(alias, XML_REPORT_KLOEZEL);
    }

    private XmlReportKloezel(Name alias, Table<XmlReportKloezelRecord> aliased) {
        this(alias, aliased, null);
    }

    private XmlReportKloezel(Name alias, Table<XmlReportKloezelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> XmlReportKloezel(Table<O> child, ForeignKey<O, XmlReportKloezelRecord> key) {
        super(child, key, XML_REPORT_KLOEZEL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Prostate.PROSTATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XML_REPORT_KLOEZEL_ID_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<XmlReportKloezelRecord, Integer> getIdentity() {
        return Keys.IDENTITY_XML_REPORT_KLOEZEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<XmlReportKloezelRecord> getPrimaryKey() {
        return Keys.XML_REPORT_KLOEZEL_ID_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<XmlReportKloezelRecord>> getKeys() {
        return Arrays.<UniqueKey<XmlReportKloezelRecord>>asList(Keys.XML_REPORT_KLOEZEL_ID_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XmlReportKloezel as(String alias) {
        return new XmlReportKloezel(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XmlReportKloezel as(Name alias) {
        return new XmlReportKloezel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public XmlReportKloezel rename(String name) {
        return new XmlReportKloezel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public XmlReportKloezel rename(Name name) {
        return new XmlReportKloezel(name, null);
    }
}
