/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records;


import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEvent;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MedicalEventRecord extends UpdatableRecordImpl<MedicalEventRecord> implements Record6<Integer, Integer, Date, Integer, Integer, String> {

    private static final long serialVersionUID = -1789073694;

    /**
     * Setter for <code>test.medical_event.medical_event_id</code>.
     */
    public void setMedicalEventId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>test.medical_event.medical_event_id</code>.
     */
    public Integer getMedicalEventId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>test.medical_event.donor_id</code>.
     */
    public void setDonorId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>test.medical_event.donor_id</code>.
     */
    public Integer getDonorId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>test.medical_event.date_of_event</code>.
     */
    public void setDateOfEvent(Date value) {
        set(2, value);
    }

    /**
     * Getter for <code>test.medical_event.date_of_event</code>.
     */
    public Date getDateOfEvent() {
        return (Date) get(2);
    }

    /**
     * Setter for <code>test.medical_event.event_type_id</code>.
     */
    public void setEventTypeId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>test.medical_event.event_type_id</code>.
     */
    public Integer getEventTypeId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>test.medical_event.provider_id</code>.
     */
    public void setProviderId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>test.medical_event.provider_id</code>.
     */
    public Integer getProviderId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>test.medical_event.diagnosis</code>.
     */
    public void setDiagnosis(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>test.medical_event.diagnosis</code>.
     */
    public String getDiagnosis() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Date, Integer, Integer, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Date, Integer, Integer, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return MedicalEvent.MEDICAL_EVENT.MEDICAL_EVENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return MedicalEvent.MEDICAL_EVENT.DONOR_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field3() {
        return MedicalEvent.MEDICAL_EVENT.DATE_OF_EVENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return MedicalEvent.MEDICAL_EVENT.EVENT_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return MedicalEvent.MEDICAL_EVENT.PROVIDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return MedicalEvent.MEDICAL_EVENT.DIAGNOSIS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getMedicalEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getDonorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component3() {
        return getDateOfEvent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getEventTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getProviderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDiagnosis();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getMedicalEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getDonorId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value3() {
        return getDateOfEvent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getEventTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getProviderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDiagnosis();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalEventRecord value1(Integer value) {
        setMedicalEventId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalEventRecord value2(Integer value) {
        setDonorId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalEventRecord value3(Date value) {
        setDateOfEvent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalEventRecord value4(Integer value) {
        setEventTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalEventRecord value5(Integer value) {
        setProviderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalEventRecord value6(String value) {
        setDiagnosis(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MedicalEventRecord values(Integer value1, Integer value2, Date value3, Integer value4, Integer value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MedicalEventRecord
     */
    public MedicalEventRecord() {
        super(MedicalEvent.MEDICAL_EVENT);
    }

    /**
     * Create a detached, initialised MedicalEventRecord
     */
    public MedicalEventRecord(Integer medicalEventId, Integer donorId, Date dateOfEvent, Integer eventTypeId, Integer providerId, String diagnosis) {
        super(MedicalEvent.MEDICAL_EVENT);

        set(0, medicalEventId);
        set(1, donorId);
        set(2, dateOfEvent);
        set(3, eventTypeId);
        set(4, providerId);
        set(5, diagnosis);
    }
}
