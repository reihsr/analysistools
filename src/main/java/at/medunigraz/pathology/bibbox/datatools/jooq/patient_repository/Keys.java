/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository;


import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Dictionary2FindingsLink;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Diseases;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Findings;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Patient;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.records.Dictionary2FindingsLinkRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.records.DiseasesRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.records.FindingsRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.records.PatientRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>patient_repository</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<Dictionary2FindingsLinkRecord, Integer> IDENTITY_DICTIONARY2_FINDINGS_LINK = Identities0.IDENTITY_DICTIONARY2_FINDINGS_LINK;
    public static final Identity<DiseasesRecord, Integer> IDENTITY_DISEASES = Identities0.IDENTITY_DISEASES;
    public static final Identity<FindingsRecord, Integer> IDENTITY_FINDINGS = Identities0.IDENTITY_FINDINGS;
    public static final Identity<PatientRecord, Integer> IDENTITY_PATIENT = Identities0.IDENTITY_PATIENT;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<Dictionary2FindingsLinkRecord> DICTIONARY2_FINDINGS_LINK_ID_PK = UniqueKeys0.DICTIONARY2_FINDINGS_LINK_ID_PK;
    public static final UniqueKey<DiseasesRecord> DISEASE_ID_PK = UniqueKeys0.DISEASE_ID_PK;
    public static final UniqueKey<FindingsRecord> FINDING_ID_PK = UniqueKeys0.FINDING_ID_PK;
    public static final UniqueKey<FindingsRecord> AURA_INDEX_UNIQUE = UniqueKeys0.AURA_INDEX_UNIQUE;
    public static final UniqueKey<PatientRecord> PATIENT_ID_PK = UniqueKeys0.PATIENT_ID_PK;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<Dictionary2FindingsLinkRecord, Integer> IDENTITY_DICTIONARY2_FINDINGS_LINK = Internal.createIdentity(Dictionary2FindingsLink.DICTIONARY2_FINDINGS_LINK, Dictionary2FindingsLink.DICTIONARY2_FINDINGS_LINK.DICTIONARY2_FINDINGS_LINK_ID);
        public static Identity<DiseasesRecord, Integer> IDENTITY_DISEASES = Internal.createIdentity(Diseases.DISEASES, Diseases.DISEASES.DISEASE_ID);
        public static Identity<FindingsRecord, Integer> IDENTITY_FINDINGS = Internal.createIdentity(Findings.FINDINGS, Findings.FINDINGS.FINDING_ID);
        public static Identity<PatientRecord, Integer> IDENTITY_PATIENT = Internal.createIdentity(Patient.PATIENT, Patient.PATIENT.PATIENT_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<Dictionary2FindingsLinkRecord> DICTIONARY2_FINDINGS_LINK_ID_PK = Internal.createUniqueKey(Dictionary2FindingsLink.DICTIONARY2_FINDINGS_LINK, "dictionary2_findings_link_id_pk", Dictionary2FindingsLink.DICTIONARY2_FINDINGS_LINK.DICTIONARY2_FINDINGS_LINK_ID);
        public static final UniqueKey<DiseasesRecord> DISEASE_ID_PK = Internal.createUniqueKey(Diseases.DISEASES, "disease_id_pk", Diseases.DISEASES.DISEASE_ID);
        public static final UniqueKey<FindingsRecord> FINDING_ID_PK = Internal.createUniqueKey(Findings.FINDINGS, "finding_id_pk", Findings.FINDINGS.FINDING_ID);
        public static final UniqueKey<FindingsRecord> AURA_INDEX_UNIQUE = Internal.createUniqueKey(Findings.FINDINGS, "aura_index_unique", Findings.FINDINGS.AURA_INDEX);
        public static final UniqueKey<PatientRecord> PATIENT_ID_PK = Internal.createUniqueKey(Patient.PATIENT, "patient_id_pk", Patient.PATIENT.PATIENT_ID);
    }
}
