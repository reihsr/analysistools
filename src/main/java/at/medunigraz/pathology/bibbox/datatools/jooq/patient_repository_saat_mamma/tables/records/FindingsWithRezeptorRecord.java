/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat_mamma.tables.records;


import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat_mamma.tables.FindingsWithRezeptor;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FindingsWithRezeptorRecord extends UpdatableRecordImpl<FindingsWithRezeptorRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = 179610684;

    /**
     * Setter for <code>patient_repository_saat_mamma.findings_with_rezeptor.finding_id</code>.
     */
    public void setFindingId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>patient_repository_saat_mamma.findings_with_rezeptor.finding_id</code>.
     */
    public Integer getFindingId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>patient_repository_saat_mamma.findings_with_rezeptor.her_2_neu</code>.
     */
    public void setHer_2Neu(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>patient_repository_saat_mamma.findings_with_rezeptor.her_2_neu</code>.
     */
    public String getHer_2Neu() {
        return (String) get(1);
    }

    /**
     * Setter for <code>patient_repository_saat_mamma.findings_with_rezeptor.regex</code>.
     */
    public void setRegex(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>patient_repository_saat_mamma.findings_with_rezeptor.regex</code>.
     */
    public String getRegex() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return FindingsWithRezeptor.FINDINGS_WITH_REZEPTOR.FINDING_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return FindingsWithRezeptor.FINDINGS_WITH_REZEPTOR.HER_2_NEU;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return FindingsWithRezeptor.FINDINGS_WITH_REZEPTOR.REGEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getFindingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getHer_2Neu();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRegex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getFindingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getHer_2Neu();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRegex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FindingsWithRezeptorRecord value1(Integer value) {
        setFindingId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FindingsWithRezeptorRecord value2(String value) {
        setHer_2Neu(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FindingsWithRezeptorRecord value3(String value) {
        setRegex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FindingsWithRezeptorRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FindingsWithRezeptorRecord
     */
    public FindingsWithRezeptorRecord() {
        super(FindingsWithRezeptor.FINDINGS_WITH_REZEPTOR);
    }

    /**
     * Create a detached, initialised FindingsWithRezeptorRecord
     */
    public FindingsWithRezeptorRecord(Integer findingId, String her_2Neu, String regex) {
        super(FindingsWithRezeptor.FINDINGS_WITH_REZEPTOR);

        set(0, findingId);
        set(1, her_2Neu);
        set(2, regex);
    }
}
