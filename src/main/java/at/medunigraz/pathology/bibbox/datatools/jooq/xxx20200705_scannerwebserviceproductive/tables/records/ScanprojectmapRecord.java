/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.tables.records;


import at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.tables.Scanprojectmap;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScanprojectmapRecord extends TableRecordImpl<ScanprojectmapRecord> implements Record4<String, Integer, Boolean, String> {

    private static final long serialVersionUID = -1826104739;

    /**
     * Setter for <code>xxx20200705_scannerwebserviceproductive.scanprojectmap.scanid_fk</code>.
     */
    public void setScanidFk(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>xxx20200705_scannerwebserviceproductive.scanprojectmap.scanid_fk</code>.
     */
    public String getScanidFk() {
        return (String) get(0);
    }

    /**
     * Setter for <code>xxx20200705_scannerwebserviceproductive.scanprojectmap.projectid_fk</code>.
     */
    public void setProjectidFk(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>xxx20200705_scannerwebserviceproductive.scanprojectmap.projectid_fk</code>.
     */
    public Integer getProjectidFk() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>xxx20200705_scannerwebserviceproductive.scanprojectmap.isdefaultproject</code>.
     */
    public void setIsdefaultproject(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>xxx20200705_scannerwebserviceproductive.scanprojectmap.isdefaultproject</code>.
     */
    public Boolean getIsdefaultproject() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>xxx20200705_scannerwebserviceproductive.scanprojectmap.wpname</code>.
     */
    public void setWpname(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>xxx20200705_scannerwebserviceproductive.scanprojectmap.wpname</code>.
     */
    public String getWpname() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, Integer, Boolean, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, Integer, Boolean, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Scanprojectmap.SCANPROJECTMAP.SCANID_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Scanprojectmap.SCANPROJECTMAP.PROJECTID_FK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field3() {
        return Scanprojectmap.SCANPROJECTMAP.ISDEFAULTPROJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Scanprojectmap.SCANPROJECTMAP.WPNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getScanidFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getProjectidFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component3() {
        return getIsdefaultproject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getWpname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getScanidFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getProjectidFk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value3() {
        return getIsdefaultproject();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getWpname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScanprojectmapRecord value1(String value) {
        setScanidFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScanprojectmapRecord value2(Integer value) {
        setProjectidFk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScanprojectmapRecord value3(Boolean value) {
        setIsdefaultproject(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScanprojectmapRecord value4(String value) {
        setWpname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScanprojectmapRecord values(String value1, Integer value2, Boolean value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScanprojectmapRecord
     */
    public ScanprojectmapRecord() {
        super(Scanprojectmap.SCANPROJECTMAP);
    }

    /**
     * Create a detached, initialised ScanprojectmapRecord
     */
    public ScanprojectmapRecord(String scanidFk, Integer projectidFk, Boolean isdefaultproject, String wpname) {
        super(Scanprojectmap.SCANPROJECTMAP);

        set(0, scanidFk);
        set(1, projectidFk);
        set(2, isdefaultproject);
        set(3, wpname);
    }
}
