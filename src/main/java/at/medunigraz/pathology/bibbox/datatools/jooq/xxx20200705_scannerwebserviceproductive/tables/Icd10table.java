/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.Xxx20200705Scannerwebserviceproductive;
import at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.tables.records.Icd10tableRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Icd10table extends TableImpl<Icd10tableRecord> {

    private static final long serialVersionUID = -324039107;

    /**
     * The reference instance of <code>xxx20200705_scannerwebserviceproductive.icd10table</code>
     */
    public static final Icd10table ICD10TABLE = new Icd10table();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Icd10tableRecord> getRecordType() {
        return Icd10tableRecord.class;
    }

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.icd10table.icd10id</code>.
     */
    public final TableField<Icd10tableRecord, Integer> ICD10ID = createField("icd10id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.icd10table.code</code>.
     */
    public final TableField<Icd10tableRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.icd10table.description</code>.
     */
    public final TableField<Icd10tableRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.icd10table.inclusive</code>.
     */
    public final TableField<Icd10tableRecord, String> INCLUSIVE = createField("inclusive", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.icd10table.exclusive</code>.
     */
    public final TableField<Icd10tableRecord, String> EXCLUSIVE = createField("exclusive", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>xxx20200705_scannerwebserviceproductive.icd10table</code> table reference
     */
    public Icd10table() {
        this(DSL.name("icd10table"), null);
    }

    /**
     * Create an aliased <code>xxx20200705_scannerwebserviceproductive.icd10table</code> table reference
     */
    public Icd10table(String alias) {
        this(DSL.name(alias), ICD10TABLE);
    }

    /**
     * Create an aliased <code>xxx20200705_scannerwebserviceproductive.icd10table</code> table reference
     */
    public Icd10table(Name alias) {
        this(alias, ICD10TABLE);
    }

    private Icd10table(Name alias, Table<Icd10tableRecord> aliased) {
        this(alias, aliased, null);
    }

    private Icd10table(Name alias, Table<Icd10tableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Icd10table(Table<O> child, ForeignKey<O, Icd10tableRecord> key) {
        super(child, key, ICD10TABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xxx20200705Scannerwebserviceproductive.XXX20200705_SCANNERWEBSERVICEPRODUCTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Icd10table as(String alias) {
        return new Icd10table(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Icd10table as(Name alias) {
        return new Icd10table(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Icd10table rename(String name) {
        return new Icd10table(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Icd10table rename(Name name) {
        return new Icd10table(name, null);
    }
}
