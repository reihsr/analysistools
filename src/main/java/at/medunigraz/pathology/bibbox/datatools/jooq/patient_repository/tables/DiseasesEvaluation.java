/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.PatientRepository;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.records.DiseasesEvaluationRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiseasesEvaluation extends TableImpl<DiseasesEvaluationRecord> {

    private static final long serialVersionUID = -897015351;

    /**
     * The reference instance of <code>patient_repository.diseases_evaluation</code>
     */
    public static final DiseasesEvaluation DISEASES_EVALUATION = new DiseasesEvaluation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DiseasesEvaluationRecord> getRecordType() {
        return DiseasesEvaluationRecord.class;
    }

    /**
     * The column <code>patient_repository.diseases_evaluation.disease_id</code>.
     */
    public final TableField<DiseasesEvaluationRecord, Integer> DISEASE_ID = createField("disease_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.icd10</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> ICD10 = createField("icd10", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.icdo</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> ICDO = createField("icdo", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.t</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> T = createField("t", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.n</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> N = createField("n", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.m</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> M = createField("m", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.g</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> G = createField("g", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.r</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> R = createField("r", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.l</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> L = createField("l", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.v</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> V = createField("v", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository.diseases_evaluation.command</code>.
     */
    public final TableField<DiseasesEvaluationRecord, String> COMMAND = createField("command", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>patient_repository.diseases_evaluation</code> table reference
     */
    public DiseasesEvaluation() {
        this(DSL.name("diseases_evaluation"), null);
    }

    /**
     * Create an aliased <code>patient_repository.diseases_evaluation</code> table reference
     */
    public DiseasesEvaluation(String alias) {
        this(DSL.name(alias), DISEASES_EVALUATION);
    }

    /**
     * Create an aliased <code>patient_repository.diseases_evaluation</code> table reference
     */
    public DiseasesEvaluation(Name alias) {
        this(alias, DISEASES_EVALUATION);
    }

    private DiseasesEvaluation(Name alias, Table<DiseasesEvaluationRecord> aliased) {
        this(alias, aliased, null);
    }

    private DiseasesEvaluation(Name alias, Table<DiseasesEvaluationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DiseasesEvaluation(Table<O> child, ForeignKey<O, DiseasesEvaluationRecord> key) {
        super(child, key, DISEASES_EVALUATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PatientRepository.PATIENT_REPOSITORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiseasesEvaluation as(String alias) {
        return new DiseasesEvaluation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DiseasesEvaluation as(Name alias) {
        return new DiseasesEvaluation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DiseasesEvaluation rename(String name) {
        return new DiseasesEvaluation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DiseasesEvaluation rename(Name name) {
        return new DiseasesEvaluation(name, null);
    }
}
