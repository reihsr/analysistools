/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.prostate_google.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_google.ProstateGoogle;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_google.tables.records.ProstateCaPosRecord;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProstateCaPos extends TableImpl<ProstateCaPosRecord> {

    private static final long serialVersionUID = 1376600811;

    /**
     * The reference instance of <code>prostate_google.prostate_ca_pos</code>
     */
    public static final ProstateCaPos PROSTATE_CA_POS = new ProstateCaPos();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProstateCaPosRecord> getRecordType() {
        return ProstateCaPosRecord.class;
    }

    /**
     * The column <code>prostate_google.prostate_ca_pos.vpatid1_ext</code>.
     */
    public final TableField<ProstateCaPosRecord, Long> VPATID1_EXT = createField("vpatid1_ext", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>prostate_google.prostate_ca_pos.examinationdate</code>.
     */
    public final TableField<ProstateCaPosRecord, Date> EXAMINATIONDATE = createField("examinationdate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>prostate_google.prostate_ca_pos</code> table reference
     */
    public ProstateCaPos() {
        this(DSL.name("prostate_ca_pos"), null);
    }

    /**
     * Create an aliased <code>prostate_google.prostate_ca_pos</code> table reference
     */
    public ProstateCaPos(String alias) {
        this(DSL.name(alias), PROSTATE_CA_POS);
    }

    /**
     * Create an aliased <code>prostate_google.prostate_ca_pos</code> table reference
     */
    public ProstateCaPos(Name alias) {
        this(alias, PROSTATE_CA_POS);
    }

    private ProstateCaPos(Name alias, Table<ProstateCaPosRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProstateCaPos(Name alias, Table<ProstateCaPosRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ProstateCaPos(Table<O> child, ForeignKey<O, ProstateCaPosRecord> key) {
        super(child, key, PROSTATE_CA_POS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ProstateGoogle.PROSTATE_GOOGLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProstateCaPos as(String alias) {
        return new ProstateCaPos(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProstateCaPos as(Name alias) {
        return new ProstateCaPos(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProstateCaPos rename(String name) {
        return new ProstateCaPos(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProstateCaPos rename(Name name) {
        return new ProstateCaPos(name, null);
    }
}
