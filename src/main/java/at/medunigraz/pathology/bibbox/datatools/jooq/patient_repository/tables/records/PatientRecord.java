/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.records;


import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Patient;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatientRecord extends UpdatableRecordImpl<PatientRecord> implements Record9<Integer, Date, String, Date, String, String, String, Integer, String> {

    private static final long serialVersionUID = -1394480888;

    /**
     * Setter for <code>patient_repository.patient.patient_id</code>.
     */
    public void setPatientId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>patient_repository.patient.patient_id</code>.
     */
    public Integer getPatientId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>patient_repository.patient.geburtsdatum</code>.
     */
    public void setGeburtsdatum(Date value) {
        set(1, value);
    }

    /**
     * Getter for <code>patient_repository.patient.geburtsdatum</code>.
     */
    public Date getGeburtsdatum() {
        return (Date) get(1);
    }

    /**
     * Setter for <code>patient_repository.patient.geschlecht</code>.
     */
    public void setGeschlecht(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>patient_repository.patient.geschlecht</code>.
     */
    public String getGeschlecht() {
        return (String) get(2);
    }

    /**
     * Setter for <code>patient_repository.patient.sterbedatum</code>.
     */
    public void setSterbedatum(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>patient_repository.patient.sterbedatum</code>.
     */
    public Date getSterbedatum() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>patient_repository.patient.obduktion</code>.
     */
    public void setObduktion(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>patient_repository.patient.obduktion</code>.
     */
    public String getObduktion() {
        return (String) get(4);
    }

    /**
     * Setter for <code>patient_repository.patient.icdncode</code>.
     */
    public void setIcdncode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>patient_repository.patient.icdncode</code>.
     */
    public String getIcdncode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>patient_repository.patient.icdecode</code>.
     */
    public void setIcdecode(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>patient_repository.patient.icdecode</code>.
     */
    public String getIcdecode() {
        return (String) get(6);
    }

    /**
     * Setter for <code>patient_repository.patient.sampledb_id</code>.
     */
    public void setSampledbId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>patient_repository.patient.sampledb_id</code>.
     */
    public Integer getSampledbId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>patient_repository.patient.source</code>.
     */
    public void setSource(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>patient_repository.patient.source</code>.
     */
    public String getSource() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Date, String, Date, String, String, String, Integer, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, Date, String, Date, String, String, String, Integer, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Patient.PATIENT.PATIENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field2() {
        return Patient.PATIENT.GEBURTSDATUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Patient.PATIENT.GESCHLECHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return Patient.PATIENT.STERBEDATUM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Patient.PATIENT.OBDUKTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Patient.PATIENT.ICDNCODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Patient.PATIENT.ICDECODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Patient.PATIENT.SAMPLEDB_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Patient.PATIENT.SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getPatientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component2() {
        return getGeburtsdatum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getGeschlecht();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component4() {
        return getSterbedatum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getObduktion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getIcdncode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getIcdecode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getSampledbId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPatientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value2() {
        return getGeburtsdatum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getGeschlecht();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getSterbedatum();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getObduktion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getIcdncode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getIcdecode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getSampledbId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value1(Integer value) {
        setPatientId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value2(Date value) {
        setGeburtsdatum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value3(String value) {
        setGeschlecht(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value4(Date value) {
        setSterbedatum(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value5(String value) {
        setObduktion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value6(String value) {
        setIcdncode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value7(String value) {
        setIcdecode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value8(Integer value) {
        setSampledbId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord value9(String value) {
        setSource(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatientRecord values(Integer value1, Date value2, String value3, Date value4, String value5, String value6, String value7, Integer value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PatientRecord
     */
    public PatientRecord() {
        super(Patient.PATIENT);
    }

    /**
     * Create a detached, initialised PatientRecord
     */
    public PatientRecord(Integer patientId, Date geburtsdatum, String geschlecht, Date sterbedatum, String obduktion, String icdncode, String icdecode, Integer sampledbId, String source) {
        super(Patient.PATIENT);

        set(0, patientId);
        set(1, geburtsdatum);
        set(2, geschlecht);
        set(3, sterbedatum);
        set(4, obduktion);
        set(5, icdncode);
        set(6, icdecode);
        set(7, sampledbId);
        set(8, source);
    }
}
