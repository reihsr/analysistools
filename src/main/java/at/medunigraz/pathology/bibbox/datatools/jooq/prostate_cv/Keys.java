/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.prostate_cv;


import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_cv.tables.DiagnosisSelection;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_cv.tables.records.DiagnosisSelectionRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>prostate_cv</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DiagnosisSelectionRecord, Integer> IDENTITY_DIAGNOSIS_SELECTION = Identities0.IDENTITY_DIAGNOSIS_SELECTION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DiagnosisSelectionRecord> DIAGNOSIS_SELECTION_PKEY = UniqueKeys0.DIAGNOSIS_SELECTION_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DiagnosisSelectionRecord, Integer> IDENTITY_DIAGNOSIS_SELECTION = Internal.createIdentity(DiagnosisSelection.DIAGNOSIS_SELECTION, DiagnosisSelection.DIAGNOSIS_SELECTION.TABLEKEY);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DiagnosisSelectionRecord> DIAGNOSIS_SELECTION_PKEY = Internal.createUniqueKey(DiagnosisSelection.DIAGNOSIS_SELECTION, "diagnosis_selection_pkey", DiagnosisSelection.DIAGNOSIS_SELECTION.TABLEKEY);
    }
}
