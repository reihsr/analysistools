/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.colon_crc.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.colon_crc.ColonCrc;
import at.medunigraz.pathology.bibbox.datatools.jooq.colon_crc.tables.records.AdoptScannFilesRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdoptScannFiles extends TableImpl<AdoptScannFilesRecord> {

    private static final long serialVersionUID = 542422434;

    /**
     * The reference instance of <code>colon_crc.adopt_scann_files</code>
     */
    public static final AdoptScannFiles ADOPT_SCANN_FILES = new AdoptScannFiles();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdoptScannFilesRecord> getRecordType() {
        return AdoptScannFilesRecord.class;
    }

    /**
     * The column <code>colon_crc.adopt_scann_files.row.names</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> ROW_NAMES = createField("row.names", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.Patient.ID</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> PATIENT_ID = createField("Patient.ID", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.Case.ID</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> CASE_ID = createField("Case.ID", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.Block.ID</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> BLOCK_ID = createField("Block.ID", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.Slide.ID</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> SLIDE_ID = createField("Slide.ID", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.Scan.ID</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> SCAN_ID = createField("Scan.ID", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.Barcode</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> BARCODE = createField("Barcode", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.Pfad</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> PFAD = createField("Pfad", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.Staining</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> STAINING = createField("Staining", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.WSI.ID</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> WSI_ID = createField("WSI.ID", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.MRXSID</code>.
     */
    public final TableField<AdoptScannFilesRecord, String> MRXSID = createField("MRXSID", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>colon_crc.adopt_scann_files.DSPACE.URL</code>.
     */
    public final TableField<AdoptScannFilesRecord, Boolean> DSPACE_URL = createField("DSPACE.URL", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>colon_crc.adopt_scann_files</code> table reference
     */
    public AdoptScannFiles() {
        this(DSL.name("adopt_scann_files"), null);
    }

    /**
     * Create an aliased <code>colon_crc.adopt_scann_files</code> table reference
     */
    public AdoptScannFiles(String alias) {
        this(DSL.name(alias), ADOPT_SCANN_FILES);
    }

    /**
     * Create an aliased <code>colon_crc.adopt_scann_files</code> table reference
     */
    public AdoptScannFiles(Name alias) {
        this(alias, ADOPT_SCANN_FILES);
    }

    private AdoptScannFiles(Name alias, Table<AdoptScannFilesRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdoptScannFiles(Name alias, Table<AdoptScannFilesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AdoptScannFiles(Table<O> child, ForeignKey<O, AdoptScannFilesRecord> key) {
        super(child, key, ADOPT_SCANN_FILES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ColonCrc.COLON_CRC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdoptScannFiles as(String alias) {
        return new AdoptScannFiles(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdoptScannFiles as(Name alias) {
        return new AdoptScannFiles(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdoptScannFiles rename(String name) {
        return new AdoptScannFiles(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AdoptScannFiles rename(Name name) {
        return new AdoptScannFiles(name, null);
    }
}
