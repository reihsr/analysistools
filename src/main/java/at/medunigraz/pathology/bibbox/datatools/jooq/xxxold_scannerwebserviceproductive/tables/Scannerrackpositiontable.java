/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.Indexes;
import at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.Keys;
import at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.XxxoldScannerwebserviceproductive;
import at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.tables.records.ScannerrackpositiontableRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Scannerrackpositiontable extends TableImpl<ScannerrackpositiontableRecord> {

    private static final long serialVersionUID = 734787596;

    /**
     * The reference instance of <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable</code>
     */
    public static final Scannerrackpositiontable SCANNERRACKPOSITIONTABLE = new Scannerrackpositiontable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScannerrackpositiontableRecord> getRecordType() {
        return ScannerrackpositiontableRecord.class;
    }

    /**
     * The column <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable.scannerrackpositionid</code>.
     */
    public final TableField<ScannerrackpositiontableRecord, Integer> SCANNERRACKPOSITIONID = createField("scannerrackpositionid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable.scannerid_fk</code>.
     */
    public final TableField<ScannerrackpositiontableRecord, String> SCANNERID_FK = createField("scannerid_fk", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable.slotid</code>.
     */
    public final TableField<ScannerrackpositiontableRecord, String> SLOTID = createField("slotid", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable.rackid_fk</code>.
     */
    public final TableField<ScannerrackpositiontableRecord, String> RACKID_FK = createField("rackid_fk", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable.lastloadtimestamp</code>.
     */
    public final TableField<ScannerrackpositiontableRecord, String> LASTLOADTIMESTAMP = createField("lastloadtimestamp", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable.lastunloadtimestamp</code>.
     */
    public final TableField<ScannerrackpositiontableRecord, String> LASTUNLOADTIMESTAMP = createField("lastunloadtimestamp", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable</code> table reference
     */
    public Scannerrackpositiontable() {
        this(DSL.name("scannerrackpositiontable"), null);
    }

    /**
     * Create an aliased <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable</code> table reference
     */
    public Scannerrackpositiontable(String alias) {
        this(DSL.name(alias), SCANNERRACKPOSITIONTABLE);
    }

    /**
     * Create an aliased <code>xxxold_scannerwebserviceproductive.scannerrackpositiontable</code> table reference
     */
    public Scannerrackpositiontable(Name alias) {
        this(alias, SCANNERRACKPOSITIONTABLE);
    }

    private Scannerrackpositiontable(Name alias, Table<ScannerrackpositiontableRecord> aliased) {
        this(alias, aliased, null);
    }

    private Scannerrackpositiontable(Name alias, Table<ScannerrackpositiontableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Scannerrackpositiontable(Table<O> child, ForeignKey<O, ScannerrackpositiontableRecord> key) {
        super(child, key, SCANNERRACKPOSITIONTABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return XxxoldScannerwebserviceproductive.XXXOLD_SCANNERWEBSERVICEPRODUCTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SCANNERRACKPOSITIONTABLE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScannerrackpositiontableRecord> getPrimaryKey() {
        return Keys.SCANNERRACKPOSITIONTABLE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScannerrackpositiontableRecord>> getKeys() {
        return Arrays.<UniqueKey<ScannerrackpositiontableRecord>>asList(Keys.SCANNERRACKPOSITIONTABLE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Scannerrackpositiontable as(String alias) {
        return new Scannerrackpositiontable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Scannerrackpositiontable as(Name alias) {
        return new Scannerrackpositiontable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Scannerrackpositiontable rename(String name) {
        return new Scannerrackpositiontable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Scannerrackpositiontable rename(Name name) {
        return new Scannerrackpositiontable(name, null);
    }
}
