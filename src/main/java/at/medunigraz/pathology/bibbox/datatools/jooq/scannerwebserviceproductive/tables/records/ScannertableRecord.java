/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.records;


import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scannertable;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScannertableRecord extends UpdatableRecordImpl<ScannertableRecord> implements Record8<String, String, String, String, Boolean, Integer, Timestamp, Timestamp> {

    private static final long serialVersionUID = 965152675;

    /**
     * Setter for <code>scannerwebserviceproductive.scannertable.scannerid</code>.
     */
    public void setScannerid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>scannerwebserviceproductive.scannertable.scannerid</code>.
     */
    public String getScannerid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>scannerwebserviceproductive.scannertable.scannertype</code>.
     */
    public void setScannertype(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>scannerwebserviceproductive.scannertable.scannertype</code>.
     */
    public String getScannertype() {
        return (String) get(1);
    }

    /**
     * Setter for <code>scannerwebserviceproductive.scannertable.scannermanufacturer</code>.
     */
    public void setScannermanufacturer(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>scannerwebserviceproductive.scannertable.scannermanufacturer</code>.
     */
    public String getScannermanufacturer() {
        return (String) get(2);
    }

    /**
     * Setter for <code>scannerwebserviceproductive.scannertable.scannerrackslots</code>.
     */
    public void setScannerrackslots(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>scannerwebserviceproductive.scannertable.scannerrackslots</code>.
     */
    public String getScannerrackslots() {
        return (String) get(3);
    }

    /**
     * Setter for <code>scannerwebserviceproductive.scannertable.shouldbeonline</code>.
     */
    public void setShouldbeonline(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>scannerwebserviceproductive.scannertable.shouldbeonline</code>.
     */
    public Boolean getShouldbeonline() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>scannerwebserviceproductive.scannertable.timeout</code>.
     */
    public void setTimeout(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>scannerwebserviceproductive.scannertable.timeout</code>.
     */
    public Integer getTimeout() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>scannerwebserviceproductive.scannertable.lasttimeonline</code>.
     */
    public void setLasttimeonline(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>scannerwebserviceproductive.scannertable.lasttimeonline</code>.
     */
    public Timestamp getLasttimeonline() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>scannerwebserviceproductive.scannertable.lasttimescanningactive</code>.
     */
    public void setLasttimescanningactive(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>scannerwebserviceproductive.scannertable.lasttimescanningactive</code>.
     */
    public Timestamp getLasttimescanningactive() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, String, String, Boolean, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<String, String, String, String, Boolean, Integer, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Scannertable.SCANNERTABLE.SCANNERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Scannertable.SCANNERTABLE.SCANNERTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Scannertable.SCANNERTABLE.SCANNERMANUFACTURER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Scannertable.SCANNERTABLE.SCANNERRACKSLOTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Scannertable.SCANNERTABLE.SHOULDBEONLINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Scannertable.SCANNERTABLE.TIMEOUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return Scannertable.SCANNERTABLE.LASTTIMEONLINE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Scannertable.SCANNERTABLE.LASTTIMESCANNINGACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getScannerid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getScannertype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getScannermanufacturer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getScannerrackslots();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getShouldbeonline();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getTimeout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getLasttimeonline();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getLasttimescanningactive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getScannerid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getScannertype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getScannermanufacturer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getScannerrackslots();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getShouldbeonline();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getTimeout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getLasttimeonline();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getLasttimescanningactive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScannertableRecord value1(String value) {
        setScannerid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScannertableRecord value2(String value) {
        setScannertype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScannertableRecord value3(String value) {
        setScannermanufacturer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScannertableRecord value4(String value) {
        setScannerrackslots(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScannertableRecord value5(Boolean value) {
        setShouldbeonline(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScannertableRecord value6(Integer value) {
        setTimeout(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScannertableRecord value7(Timestamp value) {
        setLasttimeonline(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScannertableRecord value8(Timestamp value) {
        setLasttimescanningactive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScannertableRecord values(String value1, String value2, String value3, String value4, Boolean value5, Integer value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScannertableRecord
     */
    public ScannertableRecord() {
        super(Scannertable.SCANNERTABLE);
    }

    /**
     * Create a detached, initialised ScannertableRecord
     */
    public ScannertableRecord(String scannerid, String scannertype, String scannermanufacturer, String scannerrackslots, Boolean shouldbeonline, Integer timeout, Timestamp lasttimeonline, Timestamp lasttimescanningactive) {
        super(Scannertable.SCANNERTABLE);

        set(0, scannerid);
        set(1, scannertype);
        set(2, scannermanufacturer);
        set(3, scannerrackslots);
        set(4, shouldbeonline);
        set(5, timeout);
        set(6, lasttimeonline);
        set(7, lasttimescanningactive);
    }
}
