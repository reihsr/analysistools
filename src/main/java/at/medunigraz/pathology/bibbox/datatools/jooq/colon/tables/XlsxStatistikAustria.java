/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.colon.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.colon.Colon;
import at.medunigraz.pathology.bibbox.datatools.jooq.colon.Indexes;
import at.medunigraz.pathology.bibbox.datatools.jooq.colon.Keys;
import at.medunigraz.pathology.bibbox.datatools.jooq.colon.tables.records.XlsxStatistikAustriaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XlsxStatistikAustria extends TableImpl<XlsxStatistikAustriaRecord> {

    private static final long serialVersionUID = -247987086;

    /**
     * The reference instance of <code>colon.xlsx_statistik_austria</code>
     */
    public static final XlsxStatistikAustria XLSX_STATISTIK_AUSTRIA = new XlsxStatistikAustria();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<XlsxStatistikAustriaRecord> getRecordType() {
        return XlsxStatistikAustriaRecord.class;
    }

    /**
     * The column <code>colon.xlsx_statistik_austria.id</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('colon.xlsx_statistik_austria_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.vpatid</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, Long> VPATID = createField("vpatid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.vhistid</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, Long> VHISTID = createField("vhistid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.gender</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.dod</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, String> DOD = createField("dod", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.icdncode</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, String> ICDNCODE = createField("icdncode", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.icdecode</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, String> ICDECODE = createField("icdecode", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.survival_atum_erstprobe_bis_sterbedatum</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, Integer> SURVIVAL_ATUM_ERSTPROBE_BIS_STERBEDATUM = createField("survival_atum_erstprobe_bis_sterbedatum", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.survival_datum_erstprobe_bis_heute</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, Integer> SURVIVAL_DATUM_ERSTPROBE_BIS_HEUTE = createField("survival_datum_erstprobe_bis_heute", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.alter_pat_heute</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, Integer> ALTER_PAT_HEUTE = createField("alter_pat_heute", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.heute</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, String> HEUTE = createField("heute", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.datum_erstprobe</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, String> DATUM_ERSTPROBE = createField("datum_erstprobe", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.file</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, String> FILE = createField("file", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.vpatid_extended</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, Long> VPATID_EXTENDED = createField("vpatid_extended", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>colon.xlsx_statistik_austria.vhistid_extended</code>.
     */
    public final TableField<XlsxStatistikAustriaRecord, Long> VHISTID_EXTENDED = createField("vhistid_extended", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>colon.xlsx_statistik_austria</code> table reference
     */
    public XlsxStatistikAustria() {
        this(DSL.name("xlsx_statistik_austria"), null);
    }

    /**
     * Create an aliased <code>colon.xlsx_statistik_austria</code> table reference
     */
    public XlsxStatistikAustria(String alias) {
        this(DSL.name(alias), XLSX_STATISTIK_AUSTRIA);
    }

    /**
     * Create an aliased <code>colon.xlsx_statistik_austria</code> table reference
     */
    public XlsxStatistikAustria(Name alias) {
        this(alias, XLSX_STATISTIK_AUSTRIA);
    }

    private XlsxStatistikAustria(Name alias, Table<XlsxStatistikAustriaRecord> aliased) {
        this(alias, aliased, null);
    }

    private XlsxStatistikAustria(Name alias, Table<XlsxStatistikAustriaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> XlsxStatistikAustria(Table<O> child, ForeignKey<O, XlsxStatistikAustriaRecord> key) {
        super(child, key, XLSX_STATISTIK_AUSTRIA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Colon.COLON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XLSX_STATISTIK_AUSTRIA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<XlsxStatistikAustriaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_XLSX_STATISTIK_AUSTRIA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<XlsxStatistikAustriaRecord> getPrimaryKey() {
        return Keys.XLSX_STATISTIK_AUSTRIA_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<XlsxStatistikAustriaRecord>> getKeys() {
        return Arrays.<UniqueKey<XlsxStatistikAustriaRecord>>asList(Keys.XLSX_STATISTIK_AUSTRIA_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XlsxStatistikAustria as(String alias) {
        return new XlsxStatistikAustria(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XlsxStatistikAustria as(Name alias) {
        return new XlsxStatistikAustria(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public XlsxStatistikAustria rename(String name) {
        return new XlsxStatistikAustria(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public XlsxStatistikAustria rename(Name name) {
        return new XlsxStatistikAustria(name, null);
    }
}
