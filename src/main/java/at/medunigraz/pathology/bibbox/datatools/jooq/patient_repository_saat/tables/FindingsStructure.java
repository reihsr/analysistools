/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.Indexes;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.Keys;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.PatientRepositorySaat;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat.tables.records.FindingsStructureRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FindingsStructure extends TableImpl<FindingsStructureRecord> {

    private static final long serialVersionUID = -72601477;

    /**
     * The reference instance of <code>patient_repository_saat.findings_structure</code>
     */
    public static final FindingsStructure FINDINGS_STRUCTURE = new FindingsStructure();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FindingsStructureRecord> getRecordType() {
        return FindingsStructureRecord.class;
    }

    /**
     * The column <code>patient_repository_saat.findings_structure.findings_structure_id</code>.
     */
    public final TableField<FindingsStructureRecord, Integer> FINDINGS_STRUCTURE_ID = createField("findings_structure_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('patient_repository_saat.findings_structure_findings_structure_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>patient_repository_saat.findings_structure.finding_id</code>.
     */
    public final TableField<FindingsStructureRecord, Integer> FINDING_ID = createField("finding_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>patient_repository_saat.findings_structure.text</code>.
     */
    public final TableField<FindingsStructureRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>patient_repository_saat.findings_structure.finding_position_index</code>.
     */
    public final TableField<FindingsStructureRecord, Integer> FINDING_POSITION_INDEX = createField("finding_position_index", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>patient_repository_saat.findings_structure</code> table reference
     */
    public FindingsStructure() {
        this(DSL.name("findings_structure"), null);
    }

    /**
     * Create an aliased <code>patient_repository_saat.findings_structure</code> table reference
     */
    public FindingsStructure(String alias) {
        this(DSL.name(alias), FINDINGS_STRUCTURE);
    }

    /**
     * Create an aliased <code>patient_repository_saat.findings_structure</code> table reference
     */
    public FindingsStructure(Name alias) {
        this(alias, FINDINGS_STRUCTURE);
    }

    private FindingsStructure(Name alias, Table<FindingsStructureRecord> aliased) {
        this(alias, aliased, null);
    }

    private FindingsStructure(Name alias, Table<FindingsStructureRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> FindingsStructure(Table<O> child, ForeignKey<O, FindingsStructureRecord> key) {
        super(child, key, FINDINGS_STRUCTURE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PatientRepositorySaat.PATIENT_REPOSITORY_SAAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FINDINGS_STRUCTURE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FindingsStructureRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FINDINGS_STRUCTURE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FindingsStructureRecord> getPrimaryKey() {
        return Keys.FINDINGS_STRUCTURE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FindingsStructureRecord>> getKeys() {
        return Arrays.<UniqueKey<FindingsStructureRecord>>asList(Keys.FINDINGS_STRUCTURE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FindingsStructure as(String alias) {
        return new FindingsStructure(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FindingsStructure as(Name alias) {
        return new FindingsStructure(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public FindingsStructure rename(String name) {
        return new FindingsStructure(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public FindingsStructure rename(Name name) {
        return new FindingsStructure(name, null);
    }
}
