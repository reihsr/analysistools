/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.public_.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.public_.Indexes;
import at.medunigraz.pathology.bibbox.datatools.jooq.public_.Keys;
import at.medunigraz.pathology.bibbox.datatools.jooq.public_.Public;
import at.medunigraz.pathology.bibbox.datatools.jooq.public_.tables.records.Dictionary2FindingsLinkRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dictionary2FindingsLink extends TableImpl<Dictionary2FindingsLinkRecord> {

    private static final long serialVersionUID = -532704839;

    /**
     * The reference instance of <code>public.dictionary2_findings_link</code>
     */
    public static final Dictionary2FindingsLink DICTIONARY2_FINDINGS_LINK = new Dictionary2FindingsLink();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Dictionary2FindingsLinkRecord> getRecordType() {
        return Dictionary2FindingsLinkRecord.class;
    }

    /**
     * The column <code>public.dictionary2_findings_link.id</code>.
     */
    public final TableField<Dictionary2FindingsLinkRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('dictionary2_findings_link_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.dictionary2_findings_link.dictionary_id</code>.
     */
    public final TableField<Dictionary2FindingsLinkRecord, Integer> DICTIONARY_ID = createField("dictionary_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.dictionary2_findings_link.finding_id</code>.
     */
    public final TableField<Dictionary2FindingsLinkRecord, Integer> FINDING_ID = createField("finding_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.dictionary2_findings_link.lastchanged</code>.
     */
    public final TableField<Dictionary2FindingsLinkRecord, Timestamp> LASTCHANGED = createField("lastchanged", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>public.dictionary2_findings_link</code> table reference
     */
    public Dictionary2FindingsLink() {
        this(DSL.name("dictionary2_findings_link"), null);
    }

    /**
     * Create an aliased <code>public.dictionary2_findings_link</code> table reference
     */
    public Dictionary2FindingsLink(String alias) {
        this(DSL.name(alias), DICTIONARY2_FINDINGS_LINK);
    }

    /**
     * Create an aliased <code>public.dictionary2_findings_link</code> table reference
     */
    public Dictionary2FindingsLink(Name alias) {
        this(alias, DICTIONARY2_FINDINGS_LINK);
    }

    private Dictionary2FindingsLink(Name alias, Table<Dictionary2FindingsLinkRecord> aliased) {
        this(alias, aliased, null);
    }

    private Dictionary2FindingsLink(Name alias, Table<Dictionary2FindingsLinkRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Dictionary2FindingsLink(Table<O> child, ForeignKey<O, Dictionary2FindingsLinkRecord> key) {
        super(child, key, DICTIONARY2_FINDINGS_LINK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DICTIONARY2_FINDINGS_LINK_ID_PK, Indexes.DICTIONARY2_FINDINGS_LINK_UK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Dictionary2FindingsLinkRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DICTIONARY2_FINDINGS_LINK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Dictionary2FindingsLinkRecord> getPrimaryKey() {
        return Keys.DICTIONARY2_FINDINGS_LINK_ID_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Dictionary2FindingsLinkRecord>> getKeys() {
        return Arrays.<UniqueKey<Dictionary2FindingsLinkRecord>>asList(Keys.DICTIONARY2_FINDINGS_LINK_ID_PK, Keys.DICTIONARY2_FINDINGS_LINK_UK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dictionary2FindingsLink as(String alias) {
        return new Dictionary2FindingsLink(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Dictionary2FindingsLink as(Name alias) {
        return new Dictionary2FindingsLink(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Dictionary2FindingsLink rename(String name) {
        return new Dictionary2FindingsLink(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Dictionary2FindingsLink rename(Name name) {
        return new Dictionary2FindingsLink(name, null);
    }
}
