/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.test;


import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Donor;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.EventType;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEvent;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEventCodeIcd10Link;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.MedicalEventTnmStagingLink;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Provider;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.Sample;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.SampleCodeIcd10Link;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.SampleTnmStagingLink;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.TnmStaging;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.User;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.DonorRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.EventTypeRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.MedicalEventCodeIcd10LinkRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.MedicalEventRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.MedicalEventTnmStagingLinkRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.ProviderRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.SampleCodeIcd10LinkRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.SampleRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.SampleTnmStagingLinkRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.TnmStagingRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.test.tables.records.UserRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>test</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<DonorRecord, Integer> IDENTITY_DONOR = Identities0.IDENTITY_DONOR;
    public static final Identity<EventTypeRecord, Integer> IDENTITY_EVENT_TYPE = Identities0.IDENTITY_EVENT_TYPE;
    public static final Identity<MedicalEventRecord, Integer> IDENTITY_MEDICAL_EVENT = Identities0.IDENTITY_MEDICAL_EVENT;
    public static final Identity<MedicalEventCodeIcd10LinkRecord, Integer> IDENTITY_MEDICAL_EVENT_CODE_ICD10_LINK = Identities0.IDENTITY_MEDICAL_EVENT_CODE_ICD10_LINK;
    public static final Identity<MedicalEventTnmStagingLinkRecord, Integer> IDENTITY_MEDICAL_EVENT_TNM_STAGING_LINK = Identities0.IDENTITY_MEDICAL_EVENT_TNM_STAGING_LINK;
    public static final Identity<ProviderRecord, Integer> IDENTITY_PROVIDER = Identities0.IDENTITY_PROVIDER;
    public static final Identity<SampleRecord, Integer> IDENTITY_SAMPLE = Identities0.IDENTITY_SAMPLE;
    public static final Identity<SampleCodeIcd10LinkRecord, Integer> IDENTITY_SAMPLE_CODE_ICD10_LINK = Identities0.IDENTITY_SAMPLE_CODE_ICD10_LINK;
    public static final Identity<SampleTnmStagingLinkRecord, Integer> IDENTITY_SAMPLE_TNM_STAGING_LINK = Identities0.IDENTITY_SAMPLE_TNM_STAGING_LINK;
    public static final Identity<TnmStagingRecord, Integer> IDENTITY_TNM_STAGING = Identities0.IDENTITY_TNM_STAGING;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DonorRecord> DONOR_PKEY = UniqueKeys0.DONOR_PKEY;
    public static final UniqueKey<EventTypeRecord> EVENT_TYPE_PKEY = UniqueKeys0.EVENT_TYPE_PKEY;
    public static final UniqueKey<MedicalEventRecord> MEDICAL_EVENT_PKEY = UniqueKeys0.MEDICAL_EVENT_PKEY;
    public static final UniqueKey<MedicalEventCodeIcd10LinkRecord> MEDICAL_EVENT_CODE_ICD10_LINK_PKEY = UniqueKeys0.MEDICAL_EVENT_CODE_ICD10_LINK_PKEY;
    public static final UniqueKey<MedicalEventTnmStagingLinkRecord> MEDICAL_EVENT_TNM_STAGING_LINK_PKEY = UniqueKeys0.MEDICAL_EVENT_TNM_STAGING_LINK_PKEY;
    public static final UniqueKey<ProviderRecord> PROVIDER_PKEY = UniqueKeys0.PROVIDER_PKEY;
    public static final UniqueKey<SampleRecord> SAMPLE_PKEY = UniqueKeys0.SAMPLE_PKEY;
    public static final UniqueKey<SampleCodeIcd10LinkRecord> SAMPLE_CODE_ICD10_LINK_PKEY = UniqueKeys0.SAMPLE_CODE_ICD10_LINK_PKEY;
    public static final UniqueKey<SampleTnmStagingLinkRecord> SAMPLE_TNM_STAGING_LINK_PKEY = UniqueKeys0.SAMPLE_TNM_STAGING_LINK_PKEY;
    public static final UniqueKey<TnmStagingRecord> TNM_STAGING_PKEY = UniqueKeys0.TNM_STAGING_PKEY;
    public static final UniqueKey<UserRecord> USER_PKEY = UniqueKeys0.USER_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<DonorRecord, Integer> IDENTITY_DONOR = Internal.createIdentity(Donor.DONOR, Donor.DONOR.DONER_ID);
        public static Identity<EventTypeRecord, Integer> IDENTITY_EVENT_TYPE = Internal.createIdentity(EventType.EVENT_TYPE, EventType.EVENT_TYPE.EVENT_TYPE_ID);
        public static Identity<MedicalEventRecord, Integer> IDENTITY_MEDICAL_EVENT = Internal.createIdentity(MedicalEvent.MEDICAL_EVENT, MedicalEvent.MEDICAL_EVENT.MEDICAL_EVENT_ID);
        public static Identity<MedicalEventCodeIcd10LinkRecord, Integer> IDENTITY_MEDICAL_EVENT_CODE_ICD10_LINK = Internal.createIdentity(MedicalEventCodeIcd10Link.MEDICAL_EVENT_CODE_ICD10_LINK, MedicalEventCodeIcd10Link.MEDICAL_EVENT_CODE_ICD10_LINK.MEDICAL_EVENT_CODE_ICD10_LINK_ID);
        public static Identity<MedicalEventTnmStagingLinkRecord, Integer> IDENTITY_MEDICAL_EVENT_TNM_STAGING_LINK = Internal.createIdentity(MedicalEventTnmStagingLink.MEDICAL_EVENT_TNM_STAGING_LINK, MedicalEventTnmStagingLink.MEDICAL_EVENT_TNM_STAGING_LINK.MEDICAL_EVENT_TNM_STAGING_LINK_ID);
        public static Identity<ProviderRecord, Integer> IDENTITY_PROVIDER = Internal.createIdentity(Provider.PROVIDER, Provider.PROVIDER.PROVIDER_ID);
        public static Identity<SampleRecord, Integer> IDENTITY_SAMPLE = Internal.createIdentity(Sample.SAMPLE, Sample.SAMPLE.SAMPLE_ID);
        public static Identity<SampleCodeIcd10LinkRecord, Integer> IDENTITY_SAMPLE_CODE_ICD10_LINK = Internal.createIdentity(SampleCodeIcd10Link.SAMPLE_CODE_ICD10_LINK, SampleCodeIcd10Link.SAMPLE_CODE_ICD10_LINK.SAMPLE_CODE_ICD10_LINK_ID);
        public static Identity<SampleTnmStagingLinkRecord, Integer> IDENTITY_SAMPLE_TNM_STAGING_LINK = Internal.createIdentity(SampleTnmStagingLink.SAMPLE_TNM_STAGING_LINK, SampleTnmStagingLink.SAMPLE_TNM_STAGING_LINK.SAMPLE_TNM_STAGING_LINK_ID);
        public static Identity<TnmStagingRecord, Integer> IDENTITY_TNM_STAGING = Internal.createIdentity(TnmStaging.TNM_STAGING, TnmStaging.TNM_STAGING.TNM_ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.USER_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DonorRecord> DONOR_PKEY = Internal.createUniqueKey(Donor.DONOR, "donor_pkey", Donor.DONOR.DONER_ID);
        public static final UniqueKey<EventTypeRecord> EVENT_TYPE_PKEY = Internal.createUniqueKey(EventType.EVENT_TYPE, "event_type_pkey", EventType.EVENT_TYPE.EVENT_TYPE_ID);
        public static final UniqueKey<MedicalEventRecord> MEDICAL_EVENT_PKEY = Internal.createUniqueKey(MedicalEvent.MEDICAL_EVENT, "medical_event_pkey", MedicalEvent.MEDICAL_EVENT.MEDICAL_EVENT_ID);
        public static final UniqueKey<MedicalEventCodeIcd10LinkRecord> MEDICAL_EVENT_CODE_ICD10_LINK_PKEY = Internal.createUniqueKey(MedicalEventCodeIcd10Link.MEDICAL_EVENT_CODE_ICD10_LINK, "medical_event_code_icd10_link_pkey", MedicalEventCodeIcd10Link.MEDICAL_EVENT_CODE_ICD10_LINK.MEDICAL_EVENT_CODE_ICD10_LINK_ID);
        public static final UniqueKey<MedicalEventTnmStagingLinkRecord> MEDICAL_EVENT_TNM_STAGING_LINK_PKEY = Internal.createUniqueKey(MedicalEventTnmStagingLink.MEDICAL_EVENT_TNM_STAGING_LINK, "medical_event_tnm_staging_link_pkey", MedicalEventTnmStagingLink.MEDICAL_EVENT_TNM_STAGING_LINK.MEDICAL_EVENT_TNM_STAGING_LINK_ID);
        public static final UniqueKey<ProviderRecord> PROVIDER_PKEY = Internal.createUniqueKey(Provider.PROVIDER, "provider_pkey", Provider.PROVIDER.PROVIDER_ID);
        public static final UniqueKey<SampleRecord> SAMPLE_PKEY = Internal.createUniqueKey(Sample.SAMPLE, "sample_pkey", Sample.SAMPLE.SAMPLE_ID);
        public static final UniqueKey<SampleCodeIcd10LinkRecord> SAMPLE_CODE_ICD10_LINK_PKEY = Internal.createUniqueKey(SampleCodeIcd10Link.SAMPLE_CODE_ICD10_LINK, "sample_code_icd10_link_pkey", SampleCodeIcd10Link.SAMPLE_CODE_ICD10_LINK.SAMPLE_CODE_ICD10_LINK_ID);
        public static final UniqueKey<SampleTnmStagingLinkRecord> SAMPLE_TNM_STAGING_LINK_PKEY = Internal.createUniqueKey(SampleTnmStagingLink.SAMPLE_TNM_STAGING_LINK, "sample_tnm_staging_link_pkey", SampleTnmStagingLink.SAMPLE_TNM_STAGING_LINK.SAMPLE_TNM_STAGING_LINK_ID);
        public static final UniqueKey<TnmStagingRecord> TNM_STAGING_PKEY = Internal.createUniqueKey(TnmStaging.TNM_STAGING, "tnm_staging_pkey", TnmStaging.TNM_STAGING.TNM_ID);
        public static final UniqueKey<UserRecord> USER_PKEY = Internal.createUniqueKey(User.USER, "user_pkey", User.USER.USER_ID);
    }
}
