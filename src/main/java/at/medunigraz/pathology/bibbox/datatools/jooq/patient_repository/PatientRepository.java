/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository;


import at.medunigraz.pathology.bibbox.datatools.jooq.DefaultCatalog;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Dictionary2FindingsLink;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Diseases;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.DiseasesEvaluation;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Findings;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.FindingsEvaluation;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Patient;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatientRepository extends SchemaImpl {

    private static final long serialVersionUID = 623891067;

    /**
     * The reference instance of <code>patient_repository</code>
     */
    public static final PatientRepository PATIENT_REPOSITORY = new PatientRepository();

    /**
     * The table <code>patient_repository.dictionary2_findings_link</code>.
     */
    public final Dictionary2FindingsLink DICTIONARY2_FINDINGS_LINK = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Dictionary2FindingsLink.DICTIONARY2_FINDINGS_LINK;

    /**
     * The table <code>patient_repository.diseases</code>.
     */
    public final Diseases DISEASES = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Diseases.DISEASES;

    /**
     * The table <code>patient_repository.diseases_evaluation</code>.
     */
    public final DiseasesEvaluation DISEASES_EVALUATION = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.DiseasesEvaluation.DISEASES_EVALUATION;

    /**
     * The table <code>patient_repository.findings</code>.
     */
    public final Findings FINDINGS = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Findings.FINDINGS;

    /**
     * The table <code>patient_repository.findings_evaluation</code>.
     */
    public final FindingsEvaluation FINDINGS_EVALUATION = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.FindingsEvaluation.FINDINGS_EVALUATION;

    /**
     * The table <code>patient_repository.patient</code>.
     */
    public final Patient PATIENT = at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository.tables.Patient.PATIENT;

    /**
     * No further instances allowed
     */
    private PatientRepository() {
        super("patient_repository", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.DICTIONARY2_FINDINGS_LINK_DICTIONARY2_FINDINGS_LINK_ID_SEQ,
            Sequences.DISEASES_DISEASE_ID_SEQ,
            Sequences.FINDINGS_ORIGINAL_FINDING_ID_SEQ,
            Sequences.PATIENT_PATIENT_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Dictionary2FindingsLink.DICTIONARY2_FINDINGS_LINK,
            Diseases.DISEASES,
            DiseasesEvaluation.DISEASES_EVALUATION,
            Findings.FINDINGS,
            FindingsEvaluation.FINDINGS_EVALUATION,
            Patient.PATIENT);
    }
}
