/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive;


import at.medunigraz.pathology.bibbox.datatools.jooq.DefaultCatalog;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Blockslidemap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Caseicd10map;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Caseicdomap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Caseprojectmap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Casescgmap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Casetable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Duplicatetable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Histonumbervhistonumbermap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Icd10table;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Icdotable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Idmaptable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Inboxtable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Jsonuploadtable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Keyvaluetable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Patienttable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Projectkeyvaluemap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Projectstoragemap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Projecttable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Qualityscanmap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Qualitytable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Rackstatustable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Racktable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scannerrackpositiontable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scannertable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scanprojectmap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scantable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scgtable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Slidescanmap;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Slidetable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Slideuploadtable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Stagingreferenz;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Storagetable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Typetable;
import at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Users;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Scannerwebserviceproductive extends SchemaImpl {

    private static final long serialVersionUID = 2118691721;

    /**
     * The reference instance of <code>scannerwebserviceproductive</code>
     */
    public static final Scannerwebserviceproductive SCANNERWEBSERVICEPRODUCTIVE = new Scannerwebserviceproductive();

    /**
     * The table <code>scannerwebserviceproductive.blockslidemap</code>.
     */
    public final Blockslidemap BLOCKSLIDEMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Blockslidemap.BLOCKSLIDEMAP;

    /**
     * The table <code>scannerwebserviceproductive.caseicd10map</code>.
     */
    public final Caseicd10map CASEICD10MAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Caseicd10map.CASEICD10MAP;

    /**
     * The table <code>scannerwebserviceproductive.caseicdomap</code>.
     */
    public final Caseicdomap CASEICDOMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Caseicdomap.CASEICDOMAP;

    /**
     * The table <code>scannerwebserviceproductive.caseprojectmap</code>.
     */
    public final Caseprojectmap CASEPROJECTMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Caseprojectmap.CASEPROJECTMAP;

    /**
     * The table <code>scannerwebserviceproductive.casescgmap</code>.
     */
    public final Casescgmap CASESCGMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Casescgmap.CASESCGMAP;

    /**
     * The table <code>scannerwebserviceproductive.casetable</code>.
     */
    public final Casetable CASETABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Casetable.CASETABLE;

    /**
     * The table <code>scannerwebserviceproductive.duplicatetable</code>.
     */
    public final Duplicatetable DUPLICATETABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Duplicatetable.DUPLICATETABLE;

    /**
     * The table <code>scannerwebserviceproductive.histonumbervhistonumbermap</code>.
     */
    public final Histonumbervhistonumbermap HISTONUMBERVHISTONUMBERMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Histonumbervhistonumbermap.HISTONUMBERVHISTONUMBERMAP;

    /**
     * The table <code>scannerwebserviceproductive.icd10table</code>.
     */
    public final Icd10table ICD10TABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Icd10table.ICD10TABLE;

    /**
     * The table <code>scannerwebserviceproductive.icdotable</code>.
     */
    public final Icdotable ICDOTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Icdotable.ICDOTABLE;

    /**
     * The table <code>scannerwebserviceproductive.idmaptable</code>.
     */
    public final Idmaptable IDMAPTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Idmaptable.IDMAPTABLE;

    /**
     * The table <code>scannerwebserviceproductive.inboxtable</code>.
     */
    public final Inboxtable INBOXTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Inboxtable.INBOXTABLE;

    /**
     * The table <code>scannerwebserviceproductive.jsonuploadtable</code>.
     */
    public final Jsonuploadtable JSONUPLOADTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Jsonuploadtable.JSONUPLOADTABLE;

    /**
     * The table <code>scannerwebserviceproductive.keyvaluetable</code>.
     */
    public final Keyvaluetable KEYVALUETABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Keyvaluetable.KEYVALUETABLE;

    /**
     * The table <code>scannerwebserviceproductive.patienttable</code>.
     */
    public final Patienttable PATIENTTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Patienttable.PATIENTTABLE;

    /**
     * The table <code>scannerwebserviceproductive.projectkeyvaluemap</code>.
     */
    public final Projectkeyvaluemap PROJECTKEYVALUEMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Projectkeyvaluemap.PROJECTKEYVALUEMAP;

    /**
     * The table <code>scannerwebserviceproductive.projectstoragemap</code>.
     */
    public final Projectstoragemap PROJECTSTORAGEMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Projectstoragemap.PROJECTSTORAGEMAP;

    /**
     * The table <code>scannerwebserviceproductive.projecttable</code>.
     */
    public final Projecttable PROJECTTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Projecttable.PROJECTTABLE;

    /**
     * The table <code>scannerwebserviceproductive.qualityscanmap</code>.
     */
    public final Qualityscanmap QUALITYSCANMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Qualityscanmap.QUALITYSCANMAP;

    /**
     * The table <code>scannerwebserviceproductive.qualitytable</code>.
     */
    public final Qualitytable QUALITYTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Qualitytable.QUALITYTABLE;

    /**
     * The table <code>scannerwebserviceproductive.rackstatustable</code>.
     */
    public final Rackstatustable RACKSTATUSTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Rackstatustable.RACKSTATUSTABLE;

    /**
     * The table <code>scannerwebserviceproductive.racktable</code>.
     */
    public final Racktable RACKTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Racktable.RACKTABLE;

    /**
     * The table <code>scannerwebserviceproductive.scannerrackpositiontable</code>.
     */
    public final Scannerrackpositiontable SCANNERRACKPOSITIONTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scannerrackpositiontable.SCANNERRACKPOSITIONTABLE;

    /**
     * The table <code>scannerwebserviceproductive.scannertable</code>.
     */
    public final Scannertable SCANNERTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scannertable.SCANNERTABLE;

    /**
     * The table <code>scannerwebserviceproductive.scanprojectmap</code>.
     */
    public final Scanprojectmap SCANPROJECTMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scanprojectmap.SCANPROJECTMAP;

    /**
     * The table <code>scannerwebserviceproductive.scantable</code>.
     */
    public final Scantable SCANTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scantable.SCANTABLE;

    /**
     * The table <code>scannerwebserviceproductive.scgtable</code>.
     */
    public final Scgtable SCGTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Scgtable.SCGTABLE;

    /**
     * The table <code>scannerwebserviceproductive.slidescanmap</code>.
     */
    public final Slidescanmap SLIDESCANMAP = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Slidescanmap.SLIDESCANMAP;

    /**
     * The table <code>scannerwebserviceproductive.slidetable</code>.
     */
    public final Slidetable SLIDETABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Slidetable.SLIDETABLE;

    /**
     * The table <code>scannerwebserviceproductive.slideuploadtable</code>.
     */
    public final Slideuploadtable SLIDEUPLOADTABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Slideuploadtable.SLIDEUPLOADTABLE;

    /**
     * The table <code>scannerwebserviceproductive.stagingreferenz</code>.
     */
    public final Stagingreferenz STAGINGREFERENZ = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Stagingreferenz.STAGINGREFERENZ;

    /**
     * The table <code>scannerwebserviceproductive.storagetable</code>.
     */
    public final Storagetable STORAGETABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Storagetable.STORAGETABLE;

    /**
     * The table <code>scannerwebserviceproductive.typetable</code>.
     */
    public final Typetable TYPETABLE = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Typetable.TYPETABLE;

    /**
     * The table <code>scannerwebserviceproductive.users</code>.
     */
    public final Users USERS = at.medunigraz.pathology.bibbox.datatools.jooq.scannerwebserviceproductive.tables.Users.USERS;

    /**
     * No further instances allowed
     */
    private Scannerwebserviceproductive() {
        super("scannerwebserviceproductive", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.GOOGLEJSONUPLOADID_SEQ,
            Sequences.GOOGLESLIDEUPLOADID_SEQ,
            Sequences.INBOXID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Blockslidemap.BLOCKSLIDEMAP,
            Caseicd10map.CASEICD10MAP,
            Caseicdomap.CASEICDOMAP,
            Caseprojectmap.CASEPROJECTMAP,
            Casescgmap.CASESCGMAP,
            Casetable.CASETABLE,
            Duplicatetable.DUPLICATETABLE,
            Histonumbervhistonumbermap.HISTONUMBERVHISTONUMBERMAP,
            Icd10table.ICD10TABLE,
            Icdotable.ICDOTABLE,
            Idmaptable.IDMAPTABLE,
            Inboxtable.INBOXTABLE,
            Jsonuploadtable.JSONUPLOADTABLE,
            Keyvaluetable.KEYVALUETABLE,
            Patienttable.PATIENTTABLE,
            Projectkeyvaluemap.PROJECTKEYVALUEMAP,
            Projectstoragemap.PROJECTSTORAGEMAP,
            Projecttable.PROJECTTABLE,
            Qualityscanmap.QUALITYSCANMAP,
            Qualitytable.QUALITYTABLE,
            Rackstatustable.RACKSTATUSTABLE,
            Racktable.RACKTABLE,
            Scannerrackpositiontable.SCANNERRACKPOSITIONTABLE,
            Scannertable.SCANNERTABLE,
            Scanprojectmap.SCANPROJECTMAP,
            Scantable.SCANTABLE,
            Scgtable.SCGTABLE,
            Slidescanmap.SLIDESCANMAP,
            Slidetable.SLIDETABLE,
            Slideuploadtable.SLIDEUPLOADTABLE,
            Stagingreferenz.STAGINGREFERENZ,
            Storagetable.STORAGETABLE,
            Typetable.TYPETABLE,
            Users.USERS);
    }
}
