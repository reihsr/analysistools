/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.XxxoldScannerwebserviceproductive;
import at.medunigraz.pathology.bibbox.datatools.jooq.xxxold_scannerwebserviceproductive.tables.records.CasescgmapRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Casescgmap extends TableImpl<CasescgmapRecord> {

    private static final long serialVersionUID = -1441232608;

    /**
     * The reference instance of <code>xxxold_scannerwebserviceproductive.casescgmap</code>
     */
    public static final Casescgmap CASESCGMAP = new Casescgmap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CasescgmapRecord> getRecordType() {
        return CasescgmapRecord.class;
    }

    /**
     * The column <code>xxxold_scannerwebserviceproductive.casescgmap.vhistonumberid_fk</code>.
     */
    public final TableField<CasescgmapRecord, Long> VHISTONUMBERID_FK = createField("vhistonumberid_fk", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>xxxold_scannerwebserviceproductive.casescgmap.scgid_fk</code>.
     */
    public final TableField<CasescgmapRecord, String> SCGID_FK = createField("scgid_fk", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>xxxold_scannerwebserviceproductive.casescgmap</code> table reference
     */
    public Casescgmap() {
        this(DSL.name("casescgmap"), null);
    }

    /**
     * Create an aliased <code>xxxold_scannerwebserviceproductive.casescgmap</code> table reference
     */
    public Casescgmap(String alias) {
        this(DSL.name(alias), CASESCGMAP);
    }

    /**
     * Create an aliased <code>xxxold_scannerwebserviceproductive.casescgmap</code> table reference
     */
    public Casescgmap(Name alias) {
        this(alias, CASESCGMAP);
    }

    private Casescgmap(Name alias, Table<CasescgmapRecord> aliased) {
        this(alias, aliased, null);
    }

    private Casescgmap(Name alias, Table<CasescgmapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Casescgmap(Table<O> child, ForeignKey<O, CasescgmapRecord> key) {
        super(child, key, CASESCGMAP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return XxxoldScannerwebserviceproductive.XXXOLD_SCANNERWEBSERVICEPRODUCTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Casescgmap as(String alias) {
        return new Casescgmap(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Casescgmap as(Name alias) {
        return new Casescgmap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Casescgmap rename(String name) {
        return new Casescgmap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Casescgmap rename(Name name) {
        return new Casescgmap(name, null);
    }
}
