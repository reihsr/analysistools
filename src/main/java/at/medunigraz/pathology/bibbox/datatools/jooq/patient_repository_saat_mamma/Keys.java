/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat_mamma;


import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat_mamma.tables.FindingsWithRezeptor;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat_mamma.tables.RezeptorNames;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat_mamma.tables.records.FindingsWithRezeptorRecord;
import at.medunigraz.pathology.bibbox.datatools.jooq.patient_repository_saat_mamma.tables.records.RezeptorNamesRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>patient_repository_saat_mamma</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<RezeptorNamesRecord, Integer> IDENTITY_REZEPTOR_NAMES = Identities0.IDENTITY_REZEPTOR_NAMES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FindingsWithRezeptorRecord> FINDINGS_WITH_REZEPTOR_PKEY = UniqueKeys0.FINDINGS_WITH_REZEPTOR_PKEY;
    public static final UniqueKey<RezeptorNamesRecord> REZEPTOR_NAMES_PKEY = UniqueKeys0.REZEPTOR_NAMES_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<RezeptorNamesRecord, Integer> IDENTITY_REZEPTOR_NAMES = Internal.createIdentity(RezeptorNames.REZEPTOR_NAMES, RezeptorNames.REZEPTOR_NAMES.REZEPTOR_NAMES_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<FindingsWithRezeptorRecord> FINDINGS_WITH_REZEPTOR_PKEY = Internal.createUniqueKey(FindingsWithRezeptor.FINDINGS_WITH_REZEPTOR, "findings_with_rezeptor_pkey", FindingsWithRezeptor.FINDINGS_WITH_REZEPTOR.FINDING_ID);
        public static final UniqueKey<RezeptorNamesRecord> REZEPTOR_NAMES_PKEY = Internal.createUniqueKey(RezeptorNames.REZEPTOR_NAMES, "rezeptor_names_pkey", RezeptorNames.REZEPTOR_NAMES.REZEPTOR_NAMES_ID);
    }
}
