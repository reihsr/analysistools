/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.Xxx20200705Scannerwebserviceproductive;
import at.medunigraz.pathology.bibbox.datatools.jooq.xxx20200705_scannerwebserviceproductive.tables.records.PatienttableBackRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PatienttableBack extends TableImpl<PatienttableBackRecord> {

    private static final long serialVersionUID = 1437610558;

    /**
     * The reference instance of <code>xxx20200705_scannerwebserviceproductive.patienttable_back</code>
     */
    public static final PatienttableBack PATIENTTABLE_BACK = new PatienttableBack();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PatienttableBackRecord> getRecordType() {
        return PatienttableBackRecord.class;
    }

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.patientid</code>.
     */
    public final TableField<PatienttableBackRecord, String> PATIENTID = createField("patientid", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.vpatientid</code>.
     */
    public final TableField<PatienttableBackRecord, Long> VPATIENTID = createField("vpatientid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.dateofbirth</code>.
     */
    public final TableField<PatienttableBackRecord, String> DATEOFBIRTH = createField("dateofbirth", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.dateofdeath</code>.
     */
    public final TableField<PatienttableBackRecord, String> DATEOFDEATH = createField("dateofdeath", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.icdn</code>.
     */
    public final TableField<PatienttableBackRecord, String> ICDN = createField("icdn", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.icde</code>.
     */
    public final TableField<PatienttableBackRecord, String> ICDE = createField("icde", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.gender</code>.
     */
    public final TableField<PatienttableBackRecord, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.survivalindays</code>.
     */
    public final TableField<PatienttableBackRecord, Integer> SURVIVALINDAYS = createField("survivalindays", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.survivalstatus</code>.
     */
    public final TableField<PatienttableBackRecord, String> SURVIVALSTATUS = createField("survivalstatus", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.cutofday</code>.
     */
    public final TableField<PatienttableBackRecord, String> CUTOFDAY = createField("cutofday", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.dateoffirstdiagnosis</code>.
     */
    public final TableField<PatienttableBackRecord, String> DATEOFFIRSTDIAGNOSIS = createField("dateoffirstdiagnosis", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>xxx20200705_scannerwebserviceproductive.patienttable_back.ageatcutof</code>.
     */
    public final TableField<PatienttableBackRecord, Short> AGEATCUTOF = createField("ageatcutof", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>xxx20200705_scannerwebserviceproductive.patienttable_back</code> table reference
     */
    public PatienttableBack() {
        this(DSL.name("patienttable_back"), null);
    }

    /**
     * Create an aliased <code>xxx20200705_scannerwebserviceproductive.patienttable_back</code> table reference
     */
    public PatienttableBack(String alias) {
        this(DSL.name(alias), PATIENTTABLE_BACK);
    }

    /**
     * Create an aliased <code>xxx20200705_scannerwebserviceproductive.patienttable_back</code> table reference
     */
    public PatienttableBack(Name alias) {
        this(alias, PATIENTTABLE_BACK);
    }

    private PatienttableBack(Name alias, Table<PatienttableBackRecord> aliased) {
        this(alias, aliased, null);
    }

    private PatienttableBack(Name alias, Table<PatienttableBackRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PatienttableBack(Table<O> child, ForeignKey<O, PatienttableBackRecord> key) {
        super(child, key, PATIENTTABLE_BACK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xxx20200705Scannerwebserviceproductive.XXX20200705_SCANNERWEBSERVICEPRODUCTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatienttableBack as(String alias) {
        return new PatienttableBack(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PatienttableBack as(Name alias) {
        return new PatienttableBack(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PatienttableBack rename(String name) {
        return new PatienttableBack(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PatienttableBack rename(Name name) {
        return new PatienttableBack(name, null);
    }
}
