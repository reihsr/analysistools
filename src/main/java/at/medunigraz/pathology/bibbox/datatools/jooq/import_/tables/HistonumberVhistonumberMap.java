/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.import_.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.import_.Import;
import at.medunigraz.pathology.bibbox.datatools.jooq.import_.tables.records.HistonumberVhistonumberMapRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HistonumberVhistonumberMap extends TableImpl<HistonumberVhistonumberMapRecord> {

    private static final long serialVersionUID = 411651083;

    /**
     * The reference instance of <code>import.histonumber_vhistonumber_map</code>
     */
    public static final HistonumberVhistonumberMap HISTONUMBER_VHISTONUMBER_MAP = new HistonumberVhistonumberMap();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HistonumberVhistonumberMapRecord> getRecordType() {
        return HistonumberVhistonumberMapRecord.class;
    }

    /**
     * The column <code>import.histonumber_vhistonumber_map.id</code>.
     */
    public final TableField<HistonumberVhistonumberMapRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>import.histonumber_vhistonumber_map.vhistonumberid_fk</code>.
     */
    public final TableField<HistonumberVhistonumberMapRecord, Integer> VHISTONUMBERID_FK = createField("vhistonumberid_fk", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>import.histonumber_vhistonumber_map.histonumber_fk</code>.
     */
    public final TableField<HistonumberVhistonumberMapRecord, String> HISTONUMBER_FK = createField("histonumber_fk", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>import.histonumber_vhistonumber_map.histonumber_part</code>.
     */
    public final TableField<HistonumberVhistonumberMapRecord, Integer> HISTONUMBER_PART = createField("histonumber_part", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>import.histonumber_vhistonumber_map.yearofexamination</code>.
     */
    public final TableField<HistonumberVhistonumberMapRecord, Integer> YEAROFEXAMINATION = createField("yearofexamination", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>import.histonumber_vhistonumber_map</code> table reference
     */
    public HistonumberVhistonumberMap() {
        this(DSL.name("histonumber_vhistonumber_map"), null);
    }

    /**
     * Create an aliased <code>import.histonumber_vhistonumber_map</code> table reference
     */
    public HistonumberVhistonumberMap(String alias) {
        this(DSL.name(alias), HISTONUMBER_VHISTONUMBER_MAP);
    }

    /**
     * Create an aliased <code>import.histonumber_vhistonumber_map</code> table reference
     */
    public HistonumberVhistonumberMap(Name alias) {
        this(alias, HISTONUMBER_VHISTONUMBER_MAP);
    }

    private HistonumberVhistonumberMap(Name alias, Table<HistonumberVhistonumberMapRecord> aliased) {
        this(alias, aliased, null);
    }

    private HistonumberVhistonumberMap(Name alias, Table<HistonumberVhistonumberMapRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> HistonumberVhistonumberMap(Table<O> child, ForeignKey<O, HistonumberVhistonumberMapRecord> key) {
        super(child, key, HISTONUMBER_VHISTONUMBER_MAP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Import.IMPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HistonumberVhistonumberMap as(String alias) {
        return new HistonumberVhistonumberMap(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HistonumberVhistonumberMap as(Name alias) {
        return new HistonumberVhistonumberMap(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HistonumberVhistonumberMap rename(String name) {
        return new HistonumberVhistonumberMap(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HistonumberVhistonumberMap rename(Name name) {
        return new HistonumberVhistonumberMap(name, null);
    }
}
