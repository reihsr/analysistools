/*
 * This file is generated by jOOQ.
 */
package at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.tables;


import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.Indexes;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.Keys;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.ProstateSaat;
import at.medunigraz.pathology.bibbox.datatools.jooq.prostate_saat.tables.records.XmlReportBefunddatenTokenRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class XmlReportBefunddatenToken extends TableImpl<XmlReportBefunddatenTokenRecord> {

    private static final long serialVersionUID = -325350376;

    /**
     * The reference instance of <code>prostate_saat.xml_report_befunddaten_token</code>
     */
    public static final XmlReportBefunddatenToken XML_REPORT_BEFUNDDATEN_TOKEN = new XmlReportBefunddatenToken();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<XmlReportBefunddatenTokenRecord> getRecordType() {
        return XmlReportBefunddatenTokenRecord.class;
    }

    /**
     * The column <code>prostate_saat.xml_report_befunddaten_token.xml_report_befunddaten_id</code>.
     */
    public final TableField<XmlReportBefunddatenTokenRecord, Integer> XML_REPORT_BEFUNDDATEN_ID = createField("xml_report_befunddaten_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('prostate_saat.xml_report_befunddaten_token_xml_report_befunddaten_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>prostate_saat.xml_report_befunddaten_token.token</code>.
     */
    public final TableField<XmlReportBefunddatenTokenRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * Create a <code>prostate_saat.xml_report_befunddaten_token</code> table reference
     */
    public XmlReportBefunddatenToken() {
        this(DSL.name("xml_report_befunddaten_token"), null);
    }

    /**
     * Create an aliased <code>prostate_saat.xml_report_befunddaten_token</code> table reference
     */
    public XmlReportBefunddatenToken(String alias) {
        this(DSL.name(alias), XML_REPORT_BEFUNDDATEN_TOKEN);
    }

    /**
     * Create an aliased <code>prostate_saat.xml_report_befunddaten_token</code> table reference
     */
    public XmlReportBefunddatenToken(Name alias) {
        this(alias, XML_REPORT_BEFUNDDATEN_TOKEN);
    }

    private XmlReportBefunddatenToken(Name alias, Table<XmlReportBefunddatenTokenRecord> aliased) {
        this(alias, aliased, null);
    }

    private XmlReportBefunddatenToken(Name alias, Table<XmlReportBefunddatenTokenRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> XmlReportBefunddatenToken(Table<O> child, ForeignKey<O, XmlReportBefunddatenTokenRecord> key) {
        super(child, key, XML_REPORT_BEFUNDDATEN_TOKEN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ProstateSaat.PROSTATE_SAAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XML_REPORT_BEFUNDDATEN_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<XmlReportBefunddatenTokenRecord, Integer> getIdentity() {
        return Keys.IDENTITY_XML_REPORT_BEFUNDDATEN_TOKEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<XmlReportBefunddatenTokenRecord> getPrimaryKey() {
        return Keys.XML_REPORT_BEFUNDDATEN_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<XmlReportBefunddatenTokenRecord>> getKeys() {
        return Arrays.<UniqueKey<XmlReportBefunddatenTokenRecord>>asList(Keys.XML_REPORT_BEFUNDDATEN_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XmlReportBefunddatenToken as(String alias) {
        return new XmlReportBefunddatenToken(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public XmlReportBefunddatenToken as(Name alias) {
        return new XmlReportBefunddatenToken(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public XmlReportBefunddatenToken rename(String name) {
        return new XmlReportBefunddatenToken(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public XmlReportBefunddatenToken rename(Name name) {
        return new XmlReportBefunddatenToken(name, null);
    }
}
